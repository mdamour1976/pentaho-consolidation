---------------
1.  WHAT's NEW
---------------
A list of changes in recent versions:

3.7.0:
        * Allow indexed access to columns from the tablemodel. This enables more
          ad-hoc scenarios

        * Added a new attribute to suppress the writing of generated content in
          HTML cells.

        * PRD-2503: All free-form/custom datasources are now always executed after
          all named datasources have been executed.

        * PRD-2502: The lib directory is now split into a internal and external
          directory. The internal directory contains all libraries created by
          pentaho-reporting while the external directory contains all new third
          party libraries.

        * PRD-2524: Added a scripting property to the chart-expression. This
          script is executed after the chart is created and can be used to tune
          the chart object even further.

        * PRD-1650: Enabled drill-down on images and charts. Added support
          for image-maps.

        * PRD-2512: Added support for XY-Interval-Datasets.

        * Upgraded the project to use JDK 1.5 and iText 2.1.7 and POI 3.6.

        * PRD-2555: Localization used the classloader of LibBase but must use the
          classloader that was used to load the local library.

        * [BUG] PRD-2475: Parameter did not provide sensible dataschema
          information and thus never gave types or names to the report.

        * Many internationalization fixes.

        * PRD-2664: Added MPARAMETER function to make printing multi-selection
          parameter easier.

        * Group-objects and Group-Body-objects must show all relevant settings to
          the user.

        * [API] Deprecated the DateChooserPanel and all related classes.
          Moved the DateChooserPanel down to LibSwing, after a huge clean
          up.

3.6.1:
        * [BUG] PRD-2709: Subreports that are hidden via "subreport-active"
          must not generate any content in the page and must not trigger
          the creation of a new page. Layouting must be deferred until at
          least some content is produced.

        * [BUG] PRD-2713: Specifying a invalid column in a database driven
          parameter must return <null> for that column to behave exactly
          like the reporting engine behaves elsewhere.

        * [BUG] PRD-2712: Parsing symbolic color names failed due to a
          case-sensitivity problem.

        * [BUG] PRD-2705: SubReportActive expression was evaluated in the
          context of the parent state instead of using the current state
          and thus the data-context of the subreport.

        * [BUG] PRD-2704: Table-based pageable output never ran through the
          page header when computing cell styles and thus never formated
          cells properly.

        * [BUG] PRD-2698: PreviewParameterDialog and ParameterReportController
          did not report all errors to the user. The PreviewParameterDialog
          only provided constructors for JFrames, and thus blocking any use
          from Dialogs or AWT frames.

        * [BUG] PRD-2697: Limit and Query-Timeout values defined on a report
          had no effect, as the values were removed during the derive() call.

        * [BUG] PRD-2695: Trying to save a report with null-values in a
          array on a expression property failed due to an invalid parser.
        
        * [BUG] PRD-2696: ElementStyleSheet was not serializable anymore.

        * [BUG] PRD-2433: NPE on import of excel files with irregular cell
          structures.

        * [BUG] PRD-2054: ItemHideFunction and other page-event dependent
          functions behaved badly as the page-event processing was invalid
          when processing a report in a pageable report processor.

        * [BUG] PRD-2658: The report.name property is dysfunctional since
          we moved to report-bundles. It must not be shown to the users of
          PRD.

        * [BUG] BISERVER-4180: OLAP4J changed the filter axis to no longer
          provide default members. This changes the layout of the column
          names generated by the OLAP4J denormalized-datafactory. As OLAP4J
          no longer provides the relevant information, we cannot maintain
          backward compatibility.

        * [BUG] PRD-2676: Curly brace parametrization was broken for OLAP4J
          datasources. OLAP4J datasources were not able to read the queries
          that were defined on them when the report was parsed.

        * [BUG] PRD-2680, PRD-2671: OutputFormat attribute on MasterReport
          is now a predefined list of known output formats based on the
          list of available report-process-task implementations.

        * The subreport's name is now shown in the design-view.

3.6.1-RC1: (2010-04-29)
        * [BUG] PRD-2609: We are using the metadata system to handle all the
          lookups of localized-strings now. Metadata has its own, strange
          way of defining fall-back locales.

        * [BUG] PRD-2617, PRD-2623: StyleSheet was buggy after performance fixes.

        * [BUG] PRD-2615: Compatiblity mapping was wrong for v0.7x
          reports.

        * [BUG] PRD-2621: PageSetup dialog failed with missing translations.

        * [BUG] PRD-2584, PRD-2579: Performance and memory improvements

        * [BUG] PRD-2472: Printing with the JDK-1.4 code opened the
          progress dialog before the user could confirm the print settings
          dialog. This locked both modal dialogs.

          The report processors never fired report-finished or report
          started events and thus we never had a clear hook to inject
          our code.

        * [BUG] PRD-2607: Barcode element was not working, as the background
          color was computed as black, the same as the foreground color.

        * [BUG] PRD-2581: Group-Header and Footer labels were not
          initialized correctly and thus displayed something strange.
          Attribute-values can be overriden via the metadata even when styles
          are not overridden. The two flags are independent from each other.

        * [BUG] PRD-2611: Array parsing was wrong and thus broke the
          chart-expression parsing when a array contained a space in
          leading or trailing position.

        * [BUG] PRD-2598: The bundle writer should not write empty strings as
          parameter-attribute values. This confuses the parameter editor and
          the parameters.

        * PRD-2590: Mondrian datasource must provide a hook to inject
          a platform dependent rewriter of connection parameter. This
          is needed to let the platform inject their own roles.

        * PRD-2627: Made the check-auto-close query fired by the SQLDatasource
          configurable via the report-configuration.

        * Changed the ENGINEERINGNOTATION function to support fixed
          precision mode.

        * Upgraded Mondrian to 3.2; and added some compatiblity code to
          Mondrian and OLAP4J datasources, as Mondrian changed its
          UniqueIdentifier strings.

3.6.1-RC:
        * [BUG] PRD-2588: We need to treat the form tag as paragraph when
          parsing HTML rich-text.

        * [BUG] PRD-2516: Page-header and page-footer attributes for
          excel-export were broken

        * [BUG] PRD-2564: Near-zero-height elements caused DIV/0 exceptions.

        * [BUG] PRD-2491: A null-value in a list-parameter caused the parameter
          to be rendered incorrectly in the swing-preview.

        * [BUG] PRD-2490, 2557, 2572: PageSetupDialog did not handle landscape
          pageformats correctly.

        * [BUG] PRD-2444: Style-key href-window was not persisted correctly.

        * [BUG] extensions-sampledata referenced a invalid hypersonic database.

        * [BUG] Reading BLOBs was buggy due to a invalid index used.

        * [BUG] HorizontalLineElementFactory did not set the scale property
          for some of the static helper methods.

        * [BUG] PRD-2496: Date-CellEditor did not allow null-values as selected
          date and thus the default value for parameters could not be removed.

        * [BUG] PRD-2453: PRD needs to support relative paths in content
          elements.

        * ReadCLOB can now throw exceptions and thus inform the caller that
          something went horribly wrong.

        * Upgraded Mondrian to 3.1.6, Kettle 4.0

        * Allow multi-selection parameter in Metadata datasources.

        * PRD-2562: Added support for HTML events "onmouseout" and "onmouseenter".

        * Renamed the page and total-page function so that they are known
          as running and total page now.

3.6.0-GA: (2010-01-18)
        * [BUG] PRD-2354: Toggling between design- and preview in PRD cleaned
          out the parameter-pane and thus made the JSplitPane go all funny.

        * [BUG] PRD-2435: Parameter messages must be localizable.

        * [BUG] PRD-2380: Report processing failed if page-spanning was active.

        * [BUG] PRD-2383: Queries that evaluate parameters did not have access
          to the report environment auto-fields.

        * [BUG] PRD-2386: Mondrian parametrization for PARAMETER function was
          unreliable if Mondrian is set to accept unqualified identifiers.

        * [BUG] PRD-2388: Kettle datasource was not initialized correctly and
          thus when executing the transformation, no internal variables were
          set.

        * [BUG] PRD-2058: PageState event handling was broken as these events
          were fired out of the usual order when a new page has been started.

        * [BUG] PRD-2395: Member-lookup for OLAP datasources was broken.

        * [BUG] PRD-2228: Subreports printed values from the parent report's
          datarow instead of using the subreport's updated parent datarow.

        * [BUG] PRD-2400: Fix for PRD-2058 killed the pagebreak-before feature.

        * [BUG] PRD-2397: Parsing old *.report files failed on array types.

        * [BUG] PRD-2401: Sparkline "lastColor" property was not written correctly.

        * [BUG] PRD-2417: Subreports with a computed query did not work correctly,
          as the formula had no access to the subreports declared parameter.

        * PRD-2387: Added a filtering API to remove invalid roles from Mondrian
          and OLAP4J datasources.

        * PARAMETERTEXT function URLEncodes all parameter values now by default.
          Encoding can be disabled via the second parameter.

        * PRD-2406: Allow to compute the default value for a parameter via a
          formula

        * Any environment property that provides CSV-text can be accessed as
          array via the ReportEnvironment interface.


3.6.0-M2: (2009-12-15)
        * [BUG] PRD-2320: Kettle-Queries were not cached correctly, as we tried
          to invoke hashCode() on array objects, which is not yielding
          sensible results.

        * [BUG] PRD-2325: Excel-Exports with formulas or HREF-targets larger than
          255 characters failed, as within a Excel-formula, strings cannot be
          larger than 255 characters.

        * [BUG] PRD-2324: Page-footer was not printed when exporting to pageable
          HTML.

        * [BUG] PRD-2259: Setting the vertical-alignment to middle on a row-layout
          that has extra space to distribute crashed the layouting and the report
          processing

        * [BUG] PRD-2322: Anti-aliasing stylekey was not persisted.

        * [BUG] PRD-2262: Rich-Text parsing was broken when asked to parse paragraphs
          and list elements.

        * [BUG] PRD-2340: onmouseout attribute was not declared in the attribute-
          metadata.

        * [BUG] PRD-2350: Crosstab processing did compute the column set and thus
          did not work with irregular datasources.

        * [BUG] PRD-2358: Excel page-header and footer attributes were not working.
          The attribute in the metadata was not queried in the Excel-Printer.

        * [BUG] PRD-2353: Crosstab processing in subreports did not work.

        * [BUG] PRD-2344: XYAreaLineChartExpression did not work.

        * [BUG] PRD-2333: Hibernate datasource did not pull down all required
          dependencies.

        * [BUG] PRD-2352, PRD-2367: Parsing or entry of parameters with date type
          was always producing a java.util.Date instead of the requested date subtype.

        * [BUG] ParameterControllerPane refreshed itself and thus confused the
          enclosing scrollable and split-panes

        * PRD-2084: Added a data-format attribute for parameters.

        * PRD-2267: Sample-data extensions project now works via a in-memory
          database to become independent of the current working directory and
          file system.

        * Added some extra legacy-parsing code so that we can parse report definitions
          from version 0.7.3 and upwards.

3.6.0-M1:
        * [BUG] PRD-2265: The sheetname stlye-key was not read when
          parsing a report definition.

        * [BUG] PRD-2230: Charts and wizard-definitions did not work in
          subreports, as the pre-processors for subreports were never
          activated.

        * [BUG] PRD-1988: List-parameter did not work properly with keyboard
          shortcuts.

        * [BUG] PRD-2220: Images embedded in subreports were not properly
          saved.

        * [BUG] The JDK page-setup dialog is broken in most platforms. We
          need to provide a sensible default so that users can work. The new
          dialog is independent from the broken printing system and thus
          is guaranteed to work everywhere. It also supports our page-spanning
          feature.

        * [BUG] PRE-533: Parsing a report with an empty formula caused fatal
          errors, rendering the whole report unusable.

        * [BUG] PRD-2072: Caching was broken in LibLoader and thus created
          both performance issues and a huge memory leak.

        * [BUG] PRD-2077: Allow set-member support for Mondrian-datasources.

        * [BUG] PRD-2073: When selecting a date via a date-picker parameter, the
          text-field input was ignored.

        * [BUG] PRD-2076: wizard-metadata should be disabled for all OLAP
          datasources, as this is counter-intuitive. However, it can be
          enabled manually.

        * [BUG] PRD-2067: Caching of Mondrian Connections did not work, as
          Mondrian wants to have the same instance of the datasource-object
          to recognize it as in the cache.
          
        * [BUG] Date and Number Fields did not check for invalid date formats
          and thus broke the report processing on invalid input.

        * [BUG] PRD-2070: Metadata parser was buggy and did not set the container
          flag for bands and sections, which made the report designer misbehave.

        * [BUG] PRD-2056: Metadata was wrong for lineTickLabelFormat property
          in the chart-expressions.

        * [BUG] PRD-2231: URLs given as strings were not loaded correctly,
          as the resource-loader expected URL objects.

        * [BUG] PRD-2233: PDF export writes raw images as deflated BMP now.
          This makes the file smaller.

        * [BUG] PRD-2245: In SQL datasources Date parameters were always used
          as timestamps.

        * [BUG] PRD-2246: For callable statements we must not expand arrays
          into IN (..) clauses.

        * [BUG] Report preprocessors did not have translations for their metadata.

        * [BUG] PRD-2250: Made the resource-bundle identifier configurable via
          the report configuration and added a sensible default for all new
          reports. A "translations.properties" file is auto-generated and the
          default configuration points to it.

        * [BUG] PRD-2251: Style and attribute-expressions on the master report
          were never evaluated.

        * [BUG] PRD-2249: The no-data-band was printed before the details-header
          was printed.

        * [BUG] PRD-2261: Data-XML and Data-CSV were broken due to a ClassCast-
          Exception.

        * [BUG] PRD-2006: Stacked-XY-Charts failed.

        * [BUG] PRD-2219: Parametrized reports failed to run in the platform,
          as the numeric comparison was too strict.

        * [BUG] PRD-2308: When importing old *.report files, we have to ignore
          the bogus semicolon, even when it is invalid and against the specs.

        * [BUG] PRD-2309: Horizontal bar-line charts were not working.

        * [BUG] PRD-2317: NPE on close of statement.

        * [BUG] BeanShellExpression was broken due to a missing import in the
          included header.

        * PRD-2314: Added a new formula function PARAMETERTEXT that prints values
          exactly in the format the parameter-parser later requires on URLs.

        * PRD-2260: DocumentMetaData can now be used without specifying the
          namespace of the attribute. The first occurence of a attribute named
          as given in any namespace will be returned.

        * Added support for controlling "auto-submit" on the parameter panes
          from a report-attribute.

        * PRD-2212: Added "custom" Mondrian and OLAP4J datasources, so that
          more ad-hoc scenarios are possible.

        * PRD-1091: Added "categoryTitleFont" and "categoryTickFont" properties
          to the chart expressions.

        * StaticDataSourceFactory now trims the query before executing it. With
          that we do not loose functionality, but make it less prone to errors.

        * PRD-2071: Enabled datasources to define roles and to import
          roles from external fields and parameter. This applies to Mondrian,
          OLAP4J and SQL datasources.

        * PRD-917: Pie-Chart Shadow-Color and Shadow-Offset can be configured
          now.

        * Added support for SQL-date/time types in parameter and other places.

        * PRD-2266: BSHExpression and Bean-Scripting-Framework expressions now
          have full access to the expression-runtime.

        * PRD-2207: Added support for formulas on parameter. Formulas can be
          used to post-process the parameter values or to validate the parameters.

        * Keystroked and mnemonics are no longer mandatory in translations.

        * The OLAP4J datasource support parameters now.

        * Re-Enabled the old ${..} style parametrization for OLAP4J and Mondrian
          datasources, as the concept of using the PARAMETER function is not
          usable at all.

        * Added a new formula function: ENGINEERINGNOTATION

        * PRD-1939: ItemLabelVisible is now a tri-state between boolean TRUE,
          FALSE and NULL. This way we can have a sensible default in PRD without
          breaking existing reports.

        * Added XYLineAreaChart support.

        * PRD-2300: Well-known ENV properties are now also available as fields

        * PRD-2307: After performing queries, we should close the statement as
          soon as possible. When scrollable resultsets are not enabled, we can
          close the statement as soon as the query is done, otherwise we have
          to keep the statement open until the tablemodel is closed.

        * Added a MailURLRewriter that creates URLs suitable for MIME-messages.

3.5.0: (2009-09-25)
        * [API] DataFactories can receive more context information when implementing
          the "ContextAwareDataFactory" interface.

        * [API] Added LibLoaderResourceBundleFactory for loading resource bundles
          from PRPT bundles.

        * Subreports now have their own ResourceBundleFactory and thus their own
          locale and own timezone.
          
        * Added support for row-layout bands

        * Added support for inline subreports. Like all other subreports, these
          subreports are not allowed in page-header, page-footer, detail-header,
          detail-footer or repeated instances of the group-header or group-footer.

        * Added support to make whole subreports visible based on a formula. The
          "visible" style controls the subreport from within the context of the
          parent report; the "subreport-active" formula controls the subreport from
          within the subreport itself.

        * Added experimental cross-tabbing capabilities.
          Crosstabs work on denormalized data-streams and may inject extra rows into
          the data-stream to generate missing cells for a regular cube view.

        * Integrated chart-expressions into the engine core.
          (imported from BI-Server project)

        * Added support for Mondrian datasource extension module.

        * Added support for OLAP4J datasource extension module.

        * Added support for Kettle datasource extension module.

        * Added support for Hibernate datasource extension module.

        * Added support for Scripting datasource extension module.

        * Added support for legacy XPath datasource extension module.

        * Added support for inline-table-datasources.

        * Added a report-designer legacy fileformat parser that handles *.report files.

        * Added a legacy-function project to contain some toxic waste.

        * Added a legacy-function project to contain some toxic waste.

        * Added support for sparklines

        * Moved all code from package space "org.jfree" to "org.pentaho.reporting".

        * Extended the layouter so that the report-designer can use the reporting engine's
          layout computation for its design views.

        * Metadata can now provide property editors.

        * Added designtime dataschema support

        * Report-Elements now track all changes made to them and thus allow a more
          efficient caching. They also generate events and inform their parent
          about changes.

        * ElementType objects now provide design-time support via a custom renderer
          and a method to initialize objects for the first edit.

        * Spawned a bi-server platform plugin, so that the BI-Server uses the reporting
          engine in a correct and sane way. This acts as a replacement for the broken
          JFreeReportComponent.

        * Cleaned out the legacy-chart expressions so that they are more stable. Created
          a bunch of new and clean expressions for querying data, as the old
          DataSourceCollectorFunctions were broken beyond repair and could not be
          fixed without breaking existing reports.

        * We switched to IVY to solve all dependency problems. This also creates
          Maven entries.

        * Added the concept of report pre-processors and structure-processing functions.

        * The report-design-wizard and metadata-driven report elements now pick up the
          metadata information at runtime instead of picking it up on designtime.

        * Most test-cases moved to the projects they test. Having a extra test collection
          does not work well on a organizational level.

        * Anti-aliasing can now be controlled on a per-element basis.

        * Content-Elements can now control their image-encoding settings. This controls what
          content is generated for HTML exports.

        * Added a ReportProcessTask API so that reports can be exported in a generic way.

        * DataFactories have a metadata registry now. This makes sure we do not have to
          hardcode datafactory-names anywhere.

        * Added a report specific Formula function to return the current RowCount.

        * Images and other external resources can now be embedded into the PRPT bundle.

        * Functions and expressions are allowed to have a <null> name now. These
          expressions are not visible in the datarow, but get executed exactly in
          the same way as named expressions. The values of these expressions cannot
          be referenced.

        * Added the UseMinChunkWidth style-key to control whether elements should expand
          their width to display at least some content.

        * Added support for Radar Charts in the Legacy-Charting project.

        * Added support for raw-body-content to inject custom HTML/JavaScript code into
          reports that are executed as HTML reports.

        * Added support for visible-consumes-space property to allow more control on
          how visible elements influence the layouting.

        * Added support for the exernal datafactory, which allows to inject TableModels
          as query result. This primarily exists for XAction cases where users want to
          precompute resultsets in a previous step in the XAction.

        * Added experimental bursting helper code.

        * Added support to render rich-text given as HTML 3.2 or RTF text.

        * Added support for a ReportEnvironment system to feed runtime environment
          settings into the report in a more controlled way.

        * Added a TypedTableModel class to make it easier for scriptable datasources
          to create new tablemodels.

        * Added a "samples" project that contains well-documented code to get developers
          started more easily.

        * Added the ability to define visual aggregations (which cannot be reused
          in other expressions) on elements.

        * Added support for text-indent and first-line indent styles

        * [BUG] Fixed a invalid color mapping in Excel. Excel exports now can also
          define their own set of 63 colors. This will produce ugly reports if
          a report uses more than 63 colors.
          
0.8.10.1: (12-Sep-2008)
        * [BUG] PRE-394: Values defined in the report-properties were not added
          as parameter-values in the datarow.

        * [BUG] PRE-384: A font-size greater than the canvas-element's defined
          height caused layouting to fail.

        * [BUG] PRE-386: The CSS-files generated during the HTML export contained
          invalid encoding sequences and therefore were not recognized by the
          browser. This made the report to appear unstyled.

        * [BUG] PRE-383: Roll-backs during the layouting caused the cache to become
          invalid and therefore caused weird layout-errors.

        * [BUG] PRE-385: Multiple fields with the same name confused the reporting
          engine and caused the change-flag computation to go crazy. This caused
          all groupings to fail.

        * [BUG] PRE-392: Paddings were not parsed in the bundle-fileformat.

        * [BUG] PRE-377: The SimpleXML parser removed the Itemband and the
          No-Data-Bandif groups were defined in the same report.

        * [BUG] PRE-387: PDF encryption settings referenced invalid properties and
          therefore did not work properly.

        * [BUG] PRE-374: The StaticDataRow class computed invalid hashcodes and
          caused all caching to go wrong.

        * [BUG] PRE-375: The about-dialog in the print-preview referenced a
          resourcebundle in JCommon. As JCommon is no longer a dependency of the
          engine-core, this caused MissingResourceExceptions.

        * [BUG] PRE-371: The CountDistinctFunction did not compute correct results.

        * PRE-388: When exporting to Excel or other Table-Exports, the "overflow-x"
          style-attribute can be used to control whether the text would be trimmed
          down to the visible content by the engine or whether the text should
          overflow.

        * PRE-390: The engine's linebreak behaviour on overflowing lines can now
          be controled. It defaults to by-on-word-boundaries but can be configured
          to break on character-boundaries instead.

0.8.10: (30-May-2008)
        * [BUG] A deadlock situation existed in the Preview-Components that caused
          workers to enter a deadlock state if the report is replaced while the
          pagination is still running.

        * [BUG] PRE-353: Style-Inheritance events caused a invalid state in the
          Style-Sheets and poisened the cache of the StyleSheet class.

        * [BUG] PRE-354: Style-Expressions were not always evaluated for repeating header
          and footer bands. Therefore the footer and header never got the chance to
          influence whether they should be visible or repeatable or sticky.

        * [BUG] PRE-357: StyleSheets generated by the HTML export were not properly
          encoded and therefore could have caused corruption if they contain non-ascii
          characters.

        * [BUG] PRE-358: Excel export failed on rich-text exports due to an invalid
          index used.

        * [BUG] PRE-359: Any attempt to create images from drawables that had a layouted
          size of zero failed due to a invalid boolean condition. The conversion should
          have failed silently resulting in no image instead of crashes resulting in
          no reports.

        * [BUG] PRE-363: A extra comma has been removed from some comments starting
          with the words "Checks whether".

        * [BUG] Replaced-Content should use the layouted width to compute the layouted
          height.

        * [BUG] METADATA formula function has 3 parameters, but reported it accepts
          only two.
          
        * [BUG] Bundle-Parsing did not include the "dataschema.xml" file as this
          file was references by and invalid name.
          
        * [BUG] All ElementFormatFunctions that used the shared buffer were prone
          to random crashes. The shared buffer cannot be safely managed when iterating
          the report definition and therefore we are back to using the internal
          Band-array directly.
          
        * [BUG] Border-Rendering was wrong for Graphics2D and PDF exports due 
          to some invalid caching.
          
        * [BUG] Bundle-Writing did not check for parameters correctly and therefore
          added too many namespace declarations.
          
        * [BUG] PRE-360: Vertical alignment skipped boxes that must not be 
          skipped and therefore never layouted elements contained in inline-bands.
          This was caused by yet another invalid caching optimization.
          
        * [BUG] PRE-355: Configuration description was out of date and did not contain
          all the new configuration settings.
          
        * [BUG] The Bundle-Writer did not update the document-bundle on writing.
          
        * The "report.name" property is no longer used. The name of the report
          should be only defined in the report document bundle and should be 
          queried with the "DOCUMENTMETA" formula function.
          
        * All uses of Report-Properties are deprecated now. The functionality of
          the report properties is now provided by the report's document bundle
          and the new ReportParameterValues. 
          
        * DataFactories which return <null> are now no longer valid. A datafactory
          must always return a valid tablemodel or must throw an Exception if the
          query cannot be handled by the factory. 
          
          For now, the reporting engine will only warn if such invalid behavior
          is encountered. As of 0.8.11, the default for this behavior will change
          to fail, and buggy reports must stigmatize themself by setting a 
          configuration property to restore the old behavior.
          
        * Hardening of the code: NullPointerChecks added.

        * [API] A lot of deprecated code has been removed. JCommon is no longer
          used, we now use LibBase. As LibBase uses a different package naming
          as JCommon, this release is not a drop-in release.

        * The reporting engine now uses a new fileformat for the report-definitions.
          The Unified-File-Format is based on the ODF-Standard and bundles
          all report-definitions and all resources used by the report in
          one archive.

          The old "simple-XML" and "extended-XML" fileformats are now deprecated.
          Existing reports using these fileformats will be supported in all
          future versions, but the fileformats are not able to support any of
          the new features and will never be extended to support these features.

          The new fileformat can be parsed transparently using LibLoader. For
          a application or user, there is no difference between loading a
          *.xml file of the old format or a new *.prpt file. There are no application
          changes needed to make use of the new format.

          The provided bundle-writer can be used to create *.prpt documents from
          any given JFreeReport-object.

          Due to the high-level nature of the simple-XML fileformat, any
          report defined as Simple-XML format can be instantly converted into
          a usable Unified-Fileformat report. Reports written in the extended
          XML will stil contain the legacy-filter-elements and therefore
          need manual changes before they can make use of attribute-expressions
          after converting them into the unified-fileformat.

        * Band, Elements and Groups can have a <null> name now.

          Groups are now ordinary elements and are a regular part of the
          Report-DOM. Therefore groups now allow group-wide styles and are
          able to define group-wide keep-together sections.

          Fonts and backgrounds defined on either the report or the groups
          are inherited to all sub-groups and sub-elements.

          The old org.pentaho.reporting.engine.classic.core.Group class is now split into a abstract
          class "Group" and the default implementation "RelationalGroup" to
          prepare the ascent of OLAP-Groupings.

        * [API] The report-API has been simplified and all content specific
          element types are deprecated now and will not be used anymore.

          The "Element" class is now used to define elements that produce
          printable content. "Sections" are special purpose containers which
          contain other Element or Sections. "Bands" are general purpose
          containers to group the generated content.

          Text-, Image-, Shape-, Drawable- and AnchorElements are deprecated
          and will be removed in the next version. There was no sense in
          having them since version 0.8.9, and therefore they will be removed.

        * The element-factories now produce elements which rely on the new
          ElementType-system instead of the old filter-system.

          Image-(URL-), Shape- and Drawable-(URL-)Elements are now unified
          into Content and ContentField elements. ContentElements can be
          used to display static content loaded from either a ResourceKey,
          URL, File, String (will be resolved against the base-URL) or
          created from a BLOB, Byte-Array, AWT-Image, AWT-Shape or
          Drawable-Object.

          Content-Fields accept the same content types, but read the value
          from a field from the data-row.

        * Grouping is now only defined by the position of the group in the
          report structure. Groups are no longer required to repeat all
          fields of their respective parent groups to maintain a defined
          order. (However, when defining groups in the simple or extended
          XML fileformat, the old limitations still apply. In these fileformats
          groups *have* to include the parent group's fields or the report
          will not be parsed correctly.)

        * Data-Factories now receive query hints. Right now, the query
          hints "::org.pentaho.reporting::query-limit" and
          "::org.pentaho.reporting::query-timeout" are defined. A
          data-factory implementation _should_ honor these properties.
          The query-limit is also enforced by the reporting engine after
          the query returns.

          Only the built-in SQL and Hibernate data-factories forward
          the Query-Timeout and Query-Limit parameters to the underlying
          JDBC connection. Whether the JDBC-Driver honors these query-hints
          is beyond the control of these data-factories

        * Added a new Data-Factory type: The CompoundDataFactory can be used
          to merge multiple data-factories into a large factory. The child factories
          are queried in the order of their addition. To work correctly, the
          child factories have to properly support the "isQueryExecutable" method.

        * SQL-DataFactories can now access DataSources defined in a JNDI-system.

        * TableDataFactories can now be serialized into bundle-files. This
          provides a simple way to create parameters with a fixed selection set.

        * Added writer-support for the SimpleSQLDataSource and StaticDataSource
          classes. Now all data-factory implementations provided by this library
          can be parsed and written using the built-in mechanisms.

        * Line-Height can now take percentages. A percentage lineheight
          is relative to the current font-size.

        * Added a new band types: Details-header and Details-Footer, which act
          like group-header/footer on the innermost group. These bands can be
          used to define columnheader and footer without having to know the
          group definitions. Both the header and the footer can be marked as
          sticky and repeatable.

        * A new style-property "fill-color" exists for shape-elements. The
          fill-color defines the color in which an area-shape is painted
          if "fill" is set to true. The style has no effect on any other
          element.

        * The default-stroke-width for all elements is now 0.5pt. (This was
          the default-stroke for shape-elements, but as only shape elements
          and report-drawables are affected, we can greatly reduce the
          complexity by moving this property into a global default.)

        * org.jfree.ui.Drawable is now only a calling convention. Any object
          that defines a "public void draw(Graphics2D, Rectangle)" method will
          be accepted as drawable object.

          In addition the engine now also treats the ExtendedDrawable and
          ReportDrawable interfaces as pure calling conventions, making use
          of the functions "getPreferredSize()" and "isKeepAspectRatio" whenever
          they are there.

        * Elements can now carry generic attributes. Which attributes and styles
          are valid on a element is defined in the Element-Meta-Data. Elements now
          carry an "ElementType" which is responsible for translating raw data
          and attributes into layoutable content.

          The various filters in the package "org.pentaho.reporting.engine.classic.core.filter" and
          "org.pentaho.reporting.engine.classic.core.filter.templates" should no longer be used in new
          projects. They only exist for backward compatiblity reasons now.

          The Attributes can be declared as static values or can be computed
          at runtime using the new "attribute-expressions".

          For the new ElementType-system, all parameters for creating content
          are read from the attributes of the element. Therefore all parameters
          of the content-processing can now be computed at runtime.

          All known attribute namespaces and names are declared in the
          element meta-data and are also available as constants in the class
          "org.pentaho.reporting.engine.classic.core.AttributeNames".

        * HTML export can now use the new attribute-system to inject raw-content
          into the header, body and all table-cells of the generated HTML file.
          The content is not interpreted or layouted by the reporting engine
          and is passed as is - without escaping HTML-special characters.

        * Swing-UIs can now use the attribute-system to attach actions and URLs
          to elements. The print-preview provides new listeners to receive
          onclick() events on such report-elements.

        * The new attribute system can now be used to define Excel-specific
          page-header and page-footer strings. These strings are not interpreted
          by the reporting engine and providing strings with invalid syntax may
          result in unreadable Excel-files.

        * An Excel-formula override can be defined for cells generated in the
          Excel-Export. The formula will replace any content in the cell and
          will not be interpreted in any way. Providing an invalid formula
          may render the resulting Excel-document invalid. 

        * Expressions are now fully described using ExpressionMetaData. The
          meta-data uses ordinary Bean-Info classes as part of the definition
          process, but enriches the bean-infos with additional reporting
          specific information about the role of the various expressions and
          properties.

        * Performance: The table-exporter no longer computes a global table
          representation of the report's backgrounds. Backgrounds are computed
          on demand during the output stage. This allows the engine to scale to
          a infinite number of rows (validated for result tables with 2 million
          rows) while using an fixed amount of memory.

        * Performance: All uses of the java.text.MessageFormat are replaced by
          uses of the FastMessageFormat from LibFormat. This saves memory and
          makes the message-pattern more robust.
          
        * Performance: We no longer rely on URL#hashcode() or URL#equals() as
          both methods resolve names against the DNS and therefore are horribly
          slow in some cases.

        * Subreports are now allowed to carry an own Data-Factory. This allows
          to use subreports as generic objects without requiring special knowledge
          about the subreport in the master-report.

        * [API] The Data-Row no longer allows indexed access to the columns.
          The indexed access was not used in the general reporting and in case
          a function or report-exporter needs a defined order of the columns
          in the report, they are free to establish and maintain such an order
          in their own code.

        * Removed the old image- and drawable-factories located in
          "org.pentaho.reporting.engine.classic.core.resourceloader" and replaced any use of these methods
          with proper calls to LibLoader.

        * DataSources can now provide formatting information for the reporting
          engine. This way, systems like the Pentaho-Meta-Data layer can inject
          format-patterns, fonts and other style information into existing reports.

          In cases where no meta-data system exists, a manual rulebased meta-data
          schema can be provided for the reports. This way, fields can receive
          sensible defaults based on the data-sources.

        * Reports can be preprocessed before the reporting startes (but after
          the data has been queried). This allows a Report-Design-Wizard like
          functionality inside the reporting engine. A sensible default implementation
          can be found in the code at:
          "org.pentaho.reporting.engine.classic.core.wizard.RelationalAutoGeneratorPreProcessor"

          A report-preprocessor has unlimited access to the report definition
          and is allowed to reconfigure every aspect of the definition.

        * A new and much richer XML exporter has been added. This export produces
          a layouted XML file that contains all information the rendering system
          produces, including all layouted element positions and all element
          attributes and styles.

        * The report-converter application that converted report-definitions from
          the old 0.8.3 report system to version 0.8.4 has been removed. This
          application is obsolete and during the last 4 years there were to many
          changes to let this application run successfully.

        * Performance: The reporting engine now employs a much more aggressive
          font caching.

        * Performance: Renderable Text now no longer generates single glyph-objects
          for each character printed. We now store all data in one big layout-stream.

        * The reporting engine now contains native parameter definitions in the
          Unified-File-Format. Reports with parameters defined that are displayed
          in the Swing-Preview will show a parameter-UI.

          Parameters can be either free-form text-fields or can be fed by a query
          from one of the report's datasources. In that case, single-selection
          parameters are displayed as combo-box, and multi-selection parameters
          are displayed as list.

          Parameters can carry additional attributes to customize the generated
          parameter pages.

        * A master-report can now control, whether subreports are executed or not.
          A subreport now carries an activation-expression that controlls whether
          the subreport is active. If the expression is defined and does not return
          true, the report behaves as if it was not defined at all. No values from
          export parameters will be available. 
          
        * The Table-CSV export can now read the encoding to be used from the 
          report's configuration.
          
        * Relational-Group is no longer comparable, as the order of the groups is
          now based on the position of the group in the report-DOM.
          
        * When converting old reports into Bundle-Reports, the bundle-writer now
          auto-generates parameter-definitions for each report-property that contains
          a value.

0.8.9.12: (2009-07-20)
        * Minor performance fixes in ItemSumFunction and TotalGroupSumFunction.

        * This release integrates performance changes from LibFormula.

0.8.9.11: (03-Dec-2008)
        * Altered the behavior of *-exports from subreports and added special
          handling for duplicate rows into the fast-global-view.

        * [BUG] PRE-434: If a canvas element sits slightly outside the page-area,
          it must not end up with a computed size of zero. The element must
          overflow instead.

        * [BUG] PRE-433: Watermark magic-height is not a maximum height but a
          minimum height. If the watermark contains elements outside the page-area,
          it expands to cover these elements.

        * [BUG] Prevent duplicate page-finished events at the end of the report
          processing.

        * [BUG] Elements with a defined preferred or maximum height are allowed to
          expand beyond their parent's height. Prior to that fix, they crashed
          the layouter.

        * [BUG] PRE-431: Layouter misbehaved on elements that were placed partially
          or fully outside of the renderable area.

        * [BUG] PRE-413: ItemPercentageFunction fails if divisor between 0 and 1.

        * [BUG] Text exports where text had more than one consecutive white-space
          removed all but one spaces in exports to Excel, RTF or CSV

        * [BUG] PRE-414: If Whitespaces are declared to be preserved, we have to
          state this in the CSS.

        * [BUG] PRE-417: An invalid "discardable" check caused bands with visual
          information to disappear.

        * [BUG] PRE-427: We must not check for "isIgnorableForRendering" as this
          yields invalid results. Removed the invalid uses of "isIgnorableForRendering"
          and the pruning of empty boxes.

        * [BUG] PRE-430: CanvasMajorAxisLayoutStep must use the whole child-size when
          testing for parent-boundary violations.

        * [BUG] PRE-429: FinishedNodes must take a potential shifting from the
          PaginationStep into account or layout errors happen.

        * [BUG] Added stricter computed-width calculation that takes borders/padding
          into account

        * [BUG] PRE-370: Regression: was not fixed as a array-clear operation was
          removed from the code while tracing an other error.

        * [BUG] The Watermark did not always consume the full page-space due to the
          use of absolute page heights. We now use the relative height "100%" instead
          of absolute sizes, so that the watermark adapts its size correctly.

        * Added an optimized acccess path to some of the commonly used properties.

        * General Code & Logging Cleanup

        * Logging changed to be more readable.

        * IsEmpty: Now testing via RenderBox#isEmpty instead of watching out for
          firstVisible-elements.

        * Make styles cacheable by exposing the parent's change-tracker and id.

0.8.9.10: (25-Oct-2008)
        * [BUG] PRE-397: Lost change-flag on data-row updates. This caused grouping
          and some formatting options to fail.
          This was caused by duplicate entries in the data-row caused by
          parameters imported from a subreport (which are not updated after
          their subreport finished). These parameters were just carried through.
          Now we prune the dataset at the beginning of each master-run so that
          export-parameters dont add up infinitely.

        * [BUG] Fix for a possible layouting failure when boxes are vertically
          aligned. Prior to the fix, there were rendering failures if boxes
          grew after the initial layout preparation.

        * [BUG] The HTML table-export created physically empty cells if there
          was a empty-text given as data. These cells must be filled with a
          single no-break-space to prevent rendering errors in the browser.

        * [BUG] PRE-403: Added illegal extra space at the end of the cell-data

        * [BUG] PRE-401: Safari does not interpret CSS correctly and cannot handle
          floating-point lengths. Our fix is now to round all sizes to the next
          integer. This rounding can be disabled by setting the "SafariLengthHack"
          config-property to false.

0.8.9.9: (15-Sep-2008)
        * Updated JCommon to 1.0.14, which contains a fix for a native memory
          leak in the PNG encoder.

0.8.9.8: (12-Sep-2008)
        * [BUG] PRE-388: Put "overflow-x" property to work. If specified, the
          engine will no longer clip text and will let the text overflow. For
          table-exports, the cells with overflow will contain the full text
          and for RTF and HTML this may affect the rendering.

        * [BUG] PRE-390: SimpleXML-Parser did not accept style-expressions on
          label, message-field, resource-label and resource-message elements.

        * [BUG] PDF encryption settings referenced in GUI were wrong.

        * PRE-389: Allow to control the ellipse printing on either word-boundary
          or character-boundary. The report-local property
          "org.jfree.report.LastLineBreaksOnWordBoundary" controls the behavior

        * Updated the configuration-description to match the latest version.

0.8.9.7: (29-Aug-2008)
        * [BUG] PRE-387: PDF security settings stored in the report configuration
          were not picked up by the PDF export, as the PDF export expected invalid
          property names. Now the PDF export sticks with the existing names, except
          for the PrintMode setting.

        * [BUG] A NullPointerException was raised under certain conditions if a
          merged table cell had no uniform background.

        * ConditionalItemSumFunction: Temporary result is now transient to ensure
          that serialization always works.

        * [BUG] PRE-386: HTML Export Style-Sheet encoding was invalid and
          therefore the browser ignored most of the style settings.
          Also: Font names were not correct, they were specified as constants
          in the style but should have been strings (quotes missing).

        * [BUG] PRE-371: CountDistinctFunction did not work at all.

          The implementation of this function was invalid. The function did
          not implement the clone() method and therefore messed up the
          internal state of the computation. But that was not visible, as
          most of the time the function refused to work as it waited for
          the correct prepare level (which is not sane for a "running calculation"
          function).

        * [BUG] PRE-370: FastGlobalView did not handle duplicate columns
          properly. Now if we encounter a duplicate column, we switch to a
          (slower) linear search instead of using the namecache. This makes
          sure we assign the correct index for the name on update. However,
          do not expect maximum performance if you abuse the system like
          this.

          On by-name updates, the system will always return the value of
          the *last* column with a given name.

        * [BUG] PRE-383: A invalid cache state caused layouting errors. If we
          roll-back, we have to reset the cache-flags so that the layout is
          recomputed.

        * [BUG] PRE-378: Layout failure when text-size > layouted height.

0.8.9.6: (30-May-2008)
        * [BUG] A deadlock situation existed in the Preview-Components that caused
          workers to enter a deadlock state if the report is replaced while the
          pagination is still running.

        * [BUG] PRE-353: Style-Inheritance events caused a invalid state in the
          Style-Sheets and poisened the cache of the StyleSheet class.

        * [BUG] PRE-354: Style-Expressions were not always evaluated for repeating header
          and footer bands. Therefore the footer and header never got the chance to
          influence whether they should be visible or repeatable or sticky.

        * [BUG] PRE-357: StyleSheets generated by the HTML export were not properly
          encoded and therefore could have caused corruption if they contain non-ascii
          characters.

        * [BUG] PRE-358: Excel export failed on rich-text exports due to an invalid
          index used.

        * [BUG] PRE-359: Any attempt to create images from drawables that had a layouted
          size of zero failed due to a invalid boolean condition. The conversion should
          have failed silently resulting in no image instead of crashes resulting in
          no reports.

        * [BUG] PRE-363: A extra comma has been removed from some comments starting
          with the words "Checks whether".

        * [BUG] Replaced-Content should use the layouted width to compute the layouted
          height.

0.8.9.5: (13 May 2008)
        * [BUG] PRE-278: Setting the last-page-footer to not-display caused the
          last page to become corrupted.

        * [BUG] PRE-343: Always reset the text-fill-style to "fill" to make the
          effects of bold fonts go away when drawing graphics.

        * [BUG] PRE-344: Avoid-Pagebreak crashed as the whole break-avoiding code
          was problematic.

        * [BUG] java.awt.Font objects are now accepted as function properties.
          This is fix for a previously invalid property in the chart-expressions.

        * [   ] Writing functions with invalid properties does no longer crash.
          The system issues a warning and then ignores the broken property. This
          is yet another fix for the chart-expressions.

        * [BUG] Always clear page-header and footer areas.

        * [BUG] PRE-278: Cellformats now have an additional check to see who
          provided the excel format. In case the cell-format-function provided it,
          the function now always recomputes the format-string.

        * [BUG] Preview dialogs did not register the eventlisteners correctly and
          thus never showed progress updates.

        * [BUG] PRE-283: Attribute values written to XML or XHTML files were encoded
          twice and therefore broke URL parameters.

        * [BUG] PRE-287: DataFactory.open() was not called before the report fired
          the first query. This prevented data-factories from opening up
          connections in a controlled way.

        * [BUG] PRE-320: HTML-Export: Not all fonts support the &thinsp; character
          and in that case print a ugly missing-glyph-box instead. Therefore we
          no longer use the &thinsp; glyph during the layouting.

        * [BUG] PRE-319: Group-Header-level subreports got repeated on group-footers.
          At the same time, the subreports on the group-footer were ignored.

        * [BUG] PRE-286: Printing was broken if report-name was null.

        * [BUG] Excel was not able to open files that contained cells with more than
          32.767 characters in them or with formulas with more than 1024 characters.

        * [BUG] PRE-280: Style-Change events fired during the style-setup caused
          inherited properties to propagate beyond their expected boundaries.
          Parent-Properties should not propagate if the style-sheet itself
          defines a value for the property.
  
0.8.9.4:
        * PRE-253: PrintUtil.printDirectly invoked a PrintDialog, but this
          method is intended for use in headless environments.

        * PRE-254: Overflowing text was clipped on word-boundaries which
          resulted in very strange clip-scenarios if there was only one
          or two words in the text-area. Now the engine clips on character
          boundaries and thus prints as many characters as fit in the line.

        * PRE-255: Horizontal lines placed on y=0 were lost as these lines
          always got clipped away.

        * PRE-232(2): Center Alignment still crashed in some scenarios.

        * PRE-256: Mikko Vuori contributed a set of finnish translations for
          the Swing GUI.

        * PRE-252: The preview-dialog did not properly abort running
          paginations if a second pagination was invoked. The dialog locked
          until the first pagination finished.

          When creating a PreviewDialog/Frame/Applet the pagination immediately
          started even if the dialog was never made visible. Likewise, setting
          a Report-Controller tried to abort the automaticly started pagination
          and subsequently locked-up.

        * PRE-258: The preview of reports that spanned several pages printed
          content inside the page-margins. Now the correct clipping will be
          applied all the time.

        * Bug: Some JDK 1.2.2 build fixes.

0.8.9.3: (05-Feb-2008)
        * [BUG] Fixed the component drawable by avoiding the call to
           "addNotify()". This may fix a deadlock condition in the
           rendering.

        * [BUG] PRE-247: User defined menus injected into the Swing-Preview
          using the ReportController interface did not show up.

        * [BUG] PRE-246: In HTML export, drawable elements were not exported
          correctly. The resulting image-tag had a width and height of zero.
          This was caused by the fact that drawables have no intrinsic height
          or width and therefore the export has to rely on the node's computed
          size instead.

        * [BUG] PRE-238: The pageable HTML export must use a
          PageableReportProcessor to work correctly. The pageable-export
          as implemented in the GUI classes did not work correctly.

        * [BUG] PRE-237: The RTF-Export did not write text correctly if
          the report defined a page-header or a repeating group-header.
          This bug was caused by not applying a computed offset to the
          code.

        * [BUG] PRE-232, PRE-240: The center-alignment was all buggy when
          applied to a element that spanned multiple pages. The effects
          seen here ranged from random crashes to lost data to strange layouts.

        * [BUG] PRE-229: The Progress-Dialog for the initial pagination
          when showing a PreviewFrame or PreviewDialog was not initialized
          properly and therefore never worked correctly.

        * [BUG] PRE-225: The ElementFactories threw exceptions if a
          field did not declare a field-name, even if the field uses
          the new value-formula support.

        * [BUG] PRE-220: Fixed a typo that was incorrectly setting the
          border of the top of an Excel-Cell to the same value as the
          left border of that cell.

        * [BUG] PRE-213: Generated PDF-Hyperlinks were invalid and used
          an illegal PdfAction-Type. Therefore the actions never worked
          and links were unuseable.

        * [BUG] PRE-211: Fixed a possible integer-overflow in the binary
          search methods that were spread through the code.

        * [BUG] PRE-210: Fixed various NullPointerExceptions that were caused
          by uninitialized fields in the GUI classes. Now all export-tasks
          are usable without providing a GUI-Context.

        * [BUG] PRE-209: Page-footers were lost in streaming exports. This
          affected the Stream-HTML as well as the RTF and Table-CSV exports.

        * [BUG] PRE-207: Changed the default configuration setting of the
          "EmptyCellsUseCSS" config-key to true to avoid a couple of
          rendering issues in the HTML export. Some browsers apply a minimum
          font-size to all rendered HTML documents and therefore cells with
          a very small No-Break-Space character inside are rendered larger
          than expected causing all kind of funny rendering artifacts to
          appear.

        * [BUG] PRE-205: Fixed a condition where manual pagebreaks in a
          Excel or Directory/ZIP-HTML export along with repeated headers
          caused these header to appear twice in the export.

        * [BUG] PRE-204: The HTML export generated invalid filenames for
          CSS and image-references.

        * [BUG] PRE-201: The computed top-padding for canvas-level elements
          was ignored by the layouter. Therefore the layouter never reserved
          space for borders or the declared top-paddings of the box.

        * [BUG] PRE-200: Repeating headers combined with a fixed-position
          band did not work. It caused exceptions or severe rendering errors.

        * [BUG] PRE-199: Image handling was broken

          The existing code for Image scaling and for adapting images
          to a specific output-resolution was all buggy. In HTML the exported
          images were always scaled to the cell-size, while in Excel clipping
          was not applied to the images. In the PDF/Graphics2D export, the
          images were scaled with an invalid scale-factor. RTF did not implement
          any image handling code at all.

          Excel no longer claims to accept other target-resolutions than 72dpi.

        * Added the new TotalPageItemCount function.

0.8.9.2: (07-Dec-2007)
        * [BUG] PRE-196: Fixed bug with whitespace processing in HTML

        * [BUG] PRE-192: Fixed the HTML output's duplicate BODY tag and no closing HTML tag
      
        * [BUG] PRE-191: Invalid layouting for relative sized block-elements.
      
        * For printing, added new config-property 
          "org.pentaho.reporting.engine.classic.core.modules.output.pageable.graphics.DeviceResolution" to
          allow to define the resolution of the printer independently from the other output targets.

        * Made the PDFGraphics2D constructor public to allow other packages access to this class.

        * [BUG] PRE-190: Dir-Export task miss behaved if data-dir was empty.

        * [BUG] PRE-188: Fixed-position elements caused crash if repeating group-header was active.
      
        * [BUG] On computed linebreaks, we have to suspend the PRE-mode in HTML to print a single space 
          (which allows the browser to break the line).
          
        * [BUG] PRE-186: Whitespace processing was wrong.
          This bug was most visible in HTML, but affected all other output types
          as well. The whitespace processing did not preserve all spaces if whitespace-collapse
          was set to preserve. In addition, the linebreaking removed spaces if these spaces
          were the first or last elements in a line, even if preserve-space was enabled.
          And third: The table output targets only printed one space, even if preserve-space
          was enabled and the original text contained several spaces.

        * [BUG] Whitespace handling: TRIM_TEXT_CONTENT was not applied when building
          the text-nodes. HTML did not set the "white-space: pre" property if 
          whitespace-preserving mode was enabled.

        * [BUG] PRE-195: Fixed missing '.' in the ForceBufferedWriting parameter

0.8.9.1: (30-Nov-2007)
       * [BUG] PRE-183: Fixed the schemaLocation attribute inside the XSD-files.
         The attribute pointed to an invalid location instead of pointing to the
         public download address.

       * [BUG] PRE-182: Specifying a file for which the parent
         directory did not exist in the HtmlReportUtil.createDirectoryReport(..)
         method caused strange errors.

         The fix now provides clean error messages in the underlying system
         and makes sure that directories are created when needed.

       * [BUG] PRE-181: PageBreak positions for fixed elements were not computed
         correctly. If the defined pagebreak position was located after the current
         cursor position on the page, the system sometimes crashed with strange
         exceptions.

       * [BUG] PRE-180: Parsing a report from a string using an own SAX-InputSource
         failed as the underlying parser was not properly initialized. 

       * [BUG] PRE-179: The preview-dialog and preview-frames did not
         grab the focus when they become visible. Therefore the keyboard
         shortcuts did not work und the user explicitly transfered the
         focus to these components.

       * [BUG] PRE-178: The resource-message field did not apply the defined
         null-string to the pattern-variables.

       * [BUG] PRE-177: Specifiying a path to a non-existing directory in the
         GUI caused NullPointerExceptions. File#getParent() may return null, but
         the code did not check for that case. The fixed implementation now builds
         absolute paths before trying to call #getParent().

       * [BUG] PRE-174: The Html-Entity encoding collection was incomplete and
         therefore not all characters that have an entity definition were encoded
         correctly.

       * [BUG] PRE-173: For serialization to work properly all #readResolve(..)
         methods must be protected.

       * [BUG] PRE-172: Report-Properties with a valid master-collection (as it
         happened in subreports) never queried the local properties. This made
         all local report-property definitions useless.

       * [BUG] PRE-171: Dynamic height and text overflows on the last visible
         line were not handled correctly and caused layouting errors.

       * [BUG] PRE-170: Updated the BSF-jar and in the ext-project the rhino-jar
         to make JavaScript work inside the BSFExpression.

       * [BUG] PRE-160: Using the PreviewPane without a Toolbar
         caused a NullPointerException when trying to close the
         PreviewPane.

       * [BUG] PRE-159: Paddings were not applied properly to
         block-level elements.

       * [BUG] PRE-158: Column-Division-Expression did not handle
         zero values in a mathematical sane way.

       * [BUG] By removing the PrepareEventListener interface from the
         DefaultOutputFunction our Performance improved a bit.

       * The HTML printer now always generates a (possibly empty) <title>
         tag. The generated HTML now also contains a http-equiv meta-element
         to define the charset. This way we dont have to rely on buggy server
         configurations for displaying HTML files correctly.
         
       * [API] PrepareEventListener is now deprecated.

       * [API] ElementStyleSheet#addListener and ElementStyleSheet#removeListener
         are public now.

0.8.9: (GA)(09-Nov-2007)
       * [BUG] Fixed the configuration to have the separator for zoom-actions 
         after the zoom-out instead in between zoom-in and zoom-out.

       * [BUG] Fix for PRE-155: RTF now exports text and images (if images are enabled).
         PDF now allows to increase the resolution just for this output type.
         We set it to 150dpi by default.

       * [BUG] Corrected some property writing

0.8.9: (rc-11) (08-Nov-2007)
       * [BUG] PRE-145 Added minimum and maximum zoom on the report preview
       
       * [BUG] If a date-field contains a number, Java formats it as date,
         but excel export is more strict and treats it as number. Lie to excel
         and pretend that the original object was a date.

       * [BUG] PRE-152 Large content that caused pagebreaks inside a
         Band did not update the page-footer correctly. The page event
         order also was wrong there causing the page-finished event to
         be fired after the page-footer is printed. It must be fired
         before the printing to give functions the chance to update the
         contents.

         The message-format result-caching was invalid and returned null
         where it shouldnt.

         In the Excel-Export the Graphic- and Drawable objects did not
         apply the "ContentOffset" and therefore were printed at the
         wrong position.

       * [BUG] PRE-151: Excel-Exports did not apply the common number-
         or date-format to the generated Excel-Cells. 

       * [BUG] PRE-150: HTML output duplicated empty lines that had
         no content but had some background styles defined.

       * [BUG] PRE-149: A bug in the Excel-Output prevented images and
         drawables to be rendered. The toString() representation was
         printed instead.

       * [BUG] PRE-148: PDF export created invalid PDF files when the file
         contained underlined or strike-through text. This was caused by
         and invalid call-order.
       
       * [BUG] PRE-147: Fixed page-item-sum and page-item-count function
         after we changed the page-event order.

       * [BUG] PRE-146: GUI labels in the CSV-Export dialogs were using
         the wrong translation and therefore lied to the user.

       * [BUG] PRE-145: Limited the possible values for the Zoom-Property
         of the preview pane to prevent a AWT error during the rendering.

         The maximum (default: 2000%) and minimum (1%) values can be
         configured using the global report configuration.

       * [BUG] PRE-139: Fixed to use the plain plus and minus keystrokes
         (without any modifier) for zooming.

       * Inner Dialogs now treat an ESC-keystroke as signal to cancel the
         dialog.
       
       * Normalized the localization use: Use local swing-gui-context
         whereever possible.

0.8.9: (RC-10) (02-Nov-2007)
       * Upgraded to jcommon-1.0.12 to solve some issues with booting in
         environments that use own classloaders.
       
       * [BUG] PRE-142: Fixed the table-exports: Text that would have been
         cut away in PDF was exported in the table exports. This caused excel
         to look funny and HTML to become very large.
         
       * [BUG] Fixed the double-style.
       
       * [BUG] Page-navigation corrected.
       
       * [BUG] Limit the size of relative elements to the size of the static elements.
         An element defined with y > 0 && height >= 100% will not cause the parent
         to expand. (This is now exactly how 0.8.7 behaved in that case.)
         
       * [BUG] PRE-134: Mixing canvas-bands and block-bands was broken. This was caused by
         a severe architectural mess in the layouter - the redesigned version is now easier
         to understand and easier to debug. The CanvasShift-Step is no longer needed.

       * [BUG] Excel-Printer class did check for 'not null' instead of 'null' when
         trying to get a image from a Image-Reference. This caused some images to
         get "lost" in Excel-Exports.

       * Meta-Data now reduced resolution to 72 DPI to make sure that images are not
         clipped in Excel and RTF exports. We need to add code that applies proper
         scaling to the images to handle other resolutions than 72DPI.

       * [BUG] Reporting stopped at page 53 (or 32768 points pageheight) as we reached the
         maximum height for elements. Fix: Lifted the height to 2^43 or 3500 kilometers.
         Should be enough for the next couple of years. 

       * [ENHANCEMENT] Pass null if you dont want to generate external stylesheets and images.

0.8.9: (RC-9)
        * [BUG] PRE-137: Print-Preview GUI Zoom-Dialog and Page-Number Dialog allowed
          the input of arbitary characters. Now we filter for digits and provide a
          slider for convinience.

        * [BUG] PRE-136: HTML export generated invalid URLs and the data-directory was
          always treated as relative path.

        * [BUG] Config-Descriptiong contained internal configuration-keys that were not
          hidden. Also the SheetNameExpression key was not included.

        * [BUG] PRE-135: Image scaling was wrong and did not use the computed
          width of the image to produce the computed height. Therefore images with
          keep-aspect-ratio reserved too much space (but did not use it) and images without
          keep-aspect-ratio were displayed wrong if dynamic-height was requested.

        * [BUG] PRE-133: The rendering of images in the Graphics2D and PDF outputs was
          wrong if a content-resolution other than 72dpi was defined.

        * [BUG] PRE-129: Border-rendering with rounded corners and complex line-styles
          was totally wrong again. Thanks to Martin Schmid we now have a more robust
          implementation here.

        * [BUG] Added a fix for compatiblity with the 0.8.8-4 series of reports. There we
          used the special 'field' formula prefix to map direct field access into a formula.
          This never worked out, so we remove that hack some time ago. Now, if a report is
          encountered that still relies on that formula-prefix, we issue a warning and try to
          automatically correct the field-access.

        * [BUG] RTF-tables only used 80% of the target-document's page-width. But no one
          noticed, as an other bug caused all column-widths to be multiplied by a factor of
          1000.

        * [BUG] HTML export used the invalid CSS-style-key "text-underline", which does not
          exist in CSS2. We now use "text-decoration" to disable the underlining of text.

        * [BUG] PRE-98: Table-Exports on large datasets caused OutOfMemoryExceptions and
          were awfully slow.

        * [BUG] The engine did no longer print warning on invalid-column access, even if
          the warning-system was enabled.

        * [BUG] PDF-documents generated by the engine were 50% larger than necessary. With
          this fix, the PDF documents are now almost (+/- a few bytes) as small as in 0.8.7.

        * [BUG] XML-Writer should no longer write the 'active' flag for expressions. All
          expressions are active now and the flag lost its meaning.

        * [BUG] Fixed a series of state-bugs in the table-export, which caused borders and
          backgrounds to be carried over to unused-columns and which made borders behave
          strangely on cells with row- or col-span.

        * An update to JCommon 1.0.11 fixes a NullPointerException on MacOS-X.

        * The HTML output now grants full access to the buffering and styling strategy.

          "org.pentaho.reporting.engine.classic.core.modules.output.table.html.InlineStyles" can be used to disable
          the generation of stylesheets. All style-information will be added directly to the
          generated elements. The resulting content will be larger, but the output can be
          directly streamed to the repository without using the content-buffering.
          If "BodyFragmentCreation" is enabled, the engine always generates inline styles.

          "org.pentaho.reporting.engine.classic.core.modules.output.table.html.ExternalStyle" can be used to disable
          the generation of external stylesheet files. The style information will be added
          as inline-stylesheet in the header of the generated file. If this option is enabled
          the engine will be able to directly stream the generated content to the output
          repository.

          "org.pentaho.reporting.engine.classic.core.modules.output.table.html.ForceBufferedWriting" can be used to
          disable the direct streaming of the generated content. This can be necessary in
          Web-Environments where the user's browser would try to read the CSS file before
          the stylesheet has been fully generated.

        * Some performance improvements again:
          - Optimize for stupidity: If a message-format pattern is static (it does not
            contain variable-references) we now treat the patterns as label and do not try
            to run any formatting on it.

          - We now cache the formatted values of the format-filters. This optimizes for
            users who print the same value over and over again.

        * We now have a better set of french translations.

0.8.9: (RC-8) (16-Oct-2007)
        * [BUG] HTML-printer behaved buggy on drawable-exports
          Raised the default device-resolution size to 96dpi.
        
        * Library update to POI 3.0.1 to fix PRE-118

    		* [BUG] Fix for the excel text-wrapping flag that is invalidly set.
		
		    * [BUG] Logging fixes: Reduced the verboseness of the logging in formulas and
          resource-filters when errors occur.
          
        * [BUG] More fixes on InputStream.close not contained in finally-block.
          GUI Fixes: Menu-Entry order was mixed up

0.8.9: (RC-7) (12-Oct-2007)
        * [BUG] Fixed a ClassCastException dealing with TextWrap and no longer being a boolean value

        * [BUG] Added style sheet information to images generated in HTML. (PRE-106)

        * [BUG] PRE-111: Extended-parser did not accept style-expressions on band-elements
          or on any of the root-level bands.

        * [BUG] There was no date-converter for the bean-support and therefore it was
          not possible to set java.util.Date objects as function parameter or
          property-ref value.

        * [BUG] PRE-112: Shape content was accepted as valid content by the table-exporter.
          This caused conflicts with the text content. Shape content is never valid for
          the table-exports.

        * [BUG] PRE-102, PRE-107: Table-Cell style was wrong for cells with colspan or
          rowspan greater than one.

        * [BUG] PRE-109: Large drawables and images that span more than one page corrupted
          the page header and footer due to a invalid clipping.

        * [BUG] Pre-108: The bottom most text printed on page-footers was corrupted due to
          invalid clipping rules.
          
        * Allowed to treat Ellipse-Shapes as rectangles during the table-export. This way
          ellipses trigger the legacy-background code and can be used to define the cell
          backgrounds. To enable this. set the report configuration property
          "org.pentaho.reporting.engine.classic.core.modules.output.table.base.TreatEllipseAsRectangle" to true.

0.8.9: (RC-6) (08-Oct-2007)
        * [BUG] An update to iText 1.5.2 fixed a IndexOutOfBoundsException that sometimes
          happened when exporting to RTF.

        * [BUG] PRE-104: ColumnDivideExpression died with a DivisionByZero-Exception. But
          worse, this killed the report-process. Now all expressions and functions are
          properly shielded and can no longer cause harm to the report process itself.

        * [BUG] PRE-103: A invalid change-tracker caused the layouting to fail with an
          IllegalStateException as pagebreaks were not always detected reliably.

        * [BUG] PRE-99, PRE-101, PRD-302: Functions defined on subreports were not taken
          into account when computing the required runlevels for the report processing.
          This caused all precomputation functions to fail.

        * [BUG] Functions and expressions did get called even if their defined run-level
          had not been reached yet. This wasted computing power.

        * [BUG] Cloning a JFreeReport-object or a Subreport-object should cause the
          expressions to be cloned using Expression.getInstance() and not the plain clone.

        * [BUG] SubReports with Shadow-Parameters (parameters that have the same name as a
          expression or a column from a data-row of that subreport) failed to execute as
          the parametrization did not take the duplicate names into account.

0.8.9: (RC-5) (06-Oct-2007)
        * [BUG] Fix for PRD-253/PRE-99 - Function storage used invalid keys to access the
          stored function states.

0.8.9: (RC-4) (05-Oct-2007)
        * [BUG] When processing images that cannot be read for any reason, the HTML and
          PDF export failed with exceptions. Now these exports print a warning and then
          ignore the invalid image instead.

        * [BUG] PRE-74 again: Removing (or optimizing away) empty bands must not be done,
          as these bands still may have a meaning in the layouter. The excessive optimization
          caused the pagebreaks to shift away again.

        * [BUG] A crash in the multi-page plaintext export has been fixed.

        * [BUG] The PDF and printing output is now optimized to only print the
          visible content. Before that I relied on the automatic clipping
          to remove elements that are outside the printable area, now I'm
          doing it manually. Greatly reduces PDF size.

        * [BUG] With the given layout-builder it was possible to define block or
          canvas boxes as childs of an inline box. However, inside an inline-box,
          only other inline-boxes are allowed.

        * Performance: The 'dirty' flag of the layouter was not evaluated
          correctly causing the engine to do more work than necessary.
          Makes the engine some percentages faster on all export types.

        * Memory: The Table-Exporter did not mark nodes as finished, and
          therefore the nodes never got garbage collected until the report
          was finished. (Affects HTML, Excel, RTF, CSV)

        * Memory: Stream-export created unnecessary copies of the layout
          model. The fix for this one cuts the memory usage by a factor
          of two. (Affects HTML, CSV and RTF export)

        * Memory: Activated the incremental output mode for the stream export.
          This slices the memory consumption to the bare minimum so that
          huge exports run in the default memory. The improved memory handling
          also improved execution performance.
          (Affects HTML, CSV and RTF export)

          Excel export uses the flow-output mode and therefore still suffers
          from a high memory usage.


0.8.9: (RC-3) (03-Oct-2007)
        * [BUG] TableCellDefinition.normalize() no longer touches background. This may
          lead to strange effects sometimes, but touching it always leads to strange
          effects.
         
        * [BUG] Fixed PRE-96. The nested inline-box was not added to the parent during
          the line-construction. Also buggy: Layout-builder did not construct inline-boxes
          correctly.

        * [BUG] Fixing PRE-84: Table layout was wrong.

          Caused by
              (1) Bug in TableCutList.getPrevious(.) which returned the next if the given
                  key was not in the list.
              (2) A weird mix-up of logical and physical column positions inside the
                  removeAux(..) method

          The cut-positions are no longer valid when the cells get merged (the cut was
          already removed, so referencing that index now returned a different key) and
          the code sometimes used logical adresses as physical ones and vice-versa. And
          finally. No merging was done if either one of the cells to be merged had no
          background. This then removed the background for the whole cells. Normalizing cells
          which expanded the cell-areas has to clear the background color in that case.

        * [BUG] Inline-bands with auto-paragraph must not use the non-inheritable
          styles twice. Styles belong to paragraph.
        
        * [BUG] Fixed bug where lines at the bottom of a section would not be added since their 
          "y" would be = to the maximum height
         
        * [BUG] The handling of generic inline-bands is invalid.
       
        * [BUG] WhitespaceCollapse NONE is the same as PRESERVE, but the value COLLAPSE was missing.
          So the NONE property has been removed and the COLLAPSE property has been added.
          COLLAPSE is the same behavior as in HTML, multiple whitespaces are collapsed into a single one.

        * [BUG] PRE-82: Line height is now working again.
       
        * [BUG] PRE-92: PageMargins are now safe again. 
        
        * [BUG] PRE-91: Do not optimize empty labels away. They may have a meaning as place-holders..
        
        * [BUG] PRE-90: PDF and Plaintext now correctly export to spanned pages. PlainText export
          also performs the ellipse-computation like all other pageable output targets.
          
        * [API] Moved reval-text-ellipse step to base module as it is used by all pageable outputs

0.8.9: (RC-2) (01-Oct-2007)
        * [BUG] Fixed a whole series of threading issues. The engine now behaves a lot
          better in Multi-threaded environments.

        * [BUG] The PDF export used the wrong font metrics when working with bold or
          italics True-Type fonts.

        * [BUG] The PDF font rendering was invalid. If the font was large, only the font's
          outline was rendered.

        * [BUG] The min- and max-letter spacing settings were not handled properly.

        * [BUG] The water-mark section was rendered after the page-header was rendered
          which caused the water-mark to overlay the page-header. Therefore it looked as if
          as if the page-header was not there.

        * [BUG] The (defunctional) 'ignorePageCancelEvent' property was missing from the
          page-function. The property has no effect at all, but is needed for backward
          compatibility reasons.

        * [BUG] Zoom and Goto-Page actions used an invalid parameter when creating the
          input dialog. This resulted in the display of an invalid icon.

        * [BUG] The visible-flag on bands did not cause elements to disappear due to a
          very stupid logic flaw.

        * [BUG] PRE-86: HTML export did not write hyperlinks for text elements.

        * [BUG] PRE-83: Replaced content (shapes, images and drawables) with a dynamic
          height flag set to true was not layouted correctly.

        * [BUG] PRE-80, PRE-79, PRE-78: Fixed some bugs in the image-type detection
          (compared bytes with ints without proper casts), fixed a flaw int the
          Dataset-caching and the Box-Definition factory. These bugs were reported by
          Michael Rudolf.

        * [BUG] PRE-74: Repeating group headers were not working correctly. This was caused
          by a invalid page-event order and some other bugs inside the layouter. The
          page-event order is now the same as in 0.8.8 and before. 

        * [BUG] PRE-73: The PageCountFunction and TotalPageCountFunction were not working.
          The functions contained some very ugly hacks to make them work as expected in
          the old versions (0.8.8 and before) which now backfired at us after PRE-74 got
          fixed.

        * [BUG] PRE-72: Lines were disappearing in the HTML export. This was caused by
          an invalid style-computation during the output.

        * [BUG] PRE-70: Anchors were not exported in PDF and HTML export. Now old style
          anchor objects always get mapped into the new style-property format. Anchors
          define at bands or elements now get positioned at the upper left position of
          the anchored element.

        * [API] The DataFactory is no longer available through the ProcessingContext. This
          was invalid from the very beginning and the factory returned there was not the
          factory used for the actual query.

        * [API] Introduced the PageSize class as alternative way to define page-sizes.
          The PageFormatFactory's various integer-array page-size definitions are insecure
          as public static arrays can be modified by malicious code causing subtle bugs.

        * There were major performance improvements in the layouter and output processor
          done. This especially fixes the bad performance on streaming and flow-exports
          (Excel, HTML, RTF), which was caused by an non-optimal layout-model.

          Performance for a 56 pages report is now up from 120 seconds per report to
          10 seconds for HTML. Performance for PDF and Pageable reports is not affected that
          severely but still has improved by the factor of 5.

        * A new configuration entry 'org.pentaho.reporting.engine.classic.core.YieldRate' configures how the engine
          should behave under load. The Yield-Rate calls Thread.yield() every n-times during
          the report processing, which greatly improves the responsiblity of the application
          under heavy load.

        * Added a engine-version attribute to the XML-writer and parsers. The attribute
          is not yet evaluated, but contains the version of the engine that was used to create
          the report definition (if auto-generated) or should contain the version number of
          the engine for which this report definition is intended.

        * Added support for HTML-link-titles. The link-title can be defined with the
          style-property 'href-title', which accepts string values. This property is then
          translated into the HTML <a> element's 'title' attribute.

0.8.9: (RC-1) (07-Sept-2007)
        * [BUG] HTML Printer duplicated styles of the content-cell, so that (for instance)
          paragraphs with borders printed the borders twice.

        * [BUG] HTML export printed the meta-tags on the wrong position.

        * [BUG] HTML export did not honor the copy-external-images config-flag.
          Image caching was also wrong and caused multiple copies of the same image. 

        * [BUG] HTML export now normalizes the anchor and href content to prevent
          HTML code injections.

        * [BUG] The JDK 1.4 printing plugin was not registered correctly.

        * [BUG] The PDF export dialog configured the wrong properties and therefore
          prevented to export to PDF from the Print-Preview.

        * [BUG] Global paddings and borders were not applied correctly in the
          ElementFactory. Therefore defining them had no effect at all.

        * [BUG] Some bean-value-converters were missing so that not all style-properties
          could be defined using the style-expression formulas.

        * [BUG] PRE-63: DataFactoryWriter generated empty data-factory tags.

        * [BUG] Deep-Traversing expressions did not receive the correct state object from
          the report-event. A new property ('originatingState') has been added to solve
          this problem for subreports.

        * [BUG] Global imports and exports between master and sub-reports were not working.

        * [BUG] SheetNameExpression forced bands to be visible. This might have side-effects
          on the layout.

        * [BUG] The padding and border-handing of the layouter was totally buggy and switched
          between using the content-box and the border-box when computing sizes at will.

        * [BUG] The PDF export did not honor the global embedded-font configuration entry and
          therefore fonts were only embedded if the embedded flag was set on the element itself.

        * [BUG] The underline and strikethrough was rendered in an invalid way. This is a
          LibFonts bug that has been solved now.

        * [BUG] The ProgressDialog was not visible in the exports. The configuration settings
          that would have controlled that behaviour were invalid.

        * [BUG] All exports from the GUI were executed on the AWT event dispatcher thread and
          blocked the UI updates until the report was finished. Now it is executed on an
          own thread.

        * [BUG] Modules that have unresolved dependencies should not be available in the GUI.

        * [API] Removed bogus properties from the ReportDefinition interface. There was a
          conflict between the properties from the ExpressionRuntime and the ReportDefinition
          properties and it was unclear which one was valid.

        * [API] Removed the code that handles LayoutEvents. LayoutEvents are never generated
          and will be removed in the next version.

        * [API] Removed the pageCancelled() and pageRolledBack() method from the
          PageEventListener interface. These methods are no longer used.

        * The layouter now understands the box-sizing property. This property defines whether
          the given width and height properties define the content-box or the border-box. For
          historical reasons, the engine defaults to "border-box". Therefore borders and
          paddings reduce the space that is available for the content in elements.

        * New Expression: MessageFormatExpression

        * DateExpression and VariableDateExpression have support for epoch (seconds since 1970)
          and week properties.

        * The border-radius-x and the border-radius-y attribute in the Simple-XML have
          been renamed to border-radius-width and border-radius-height. The schema file
          has been updated to reflect these changes.

        * The border-radius style-properties are now split into the two simple style-properties
          border-radius-width and border-radius-height.

        * The Config-Description-Editor got a face-lifting.

        * Updated the config-description.xml file that holds the complete documentation about all
          available configuration properties.

        * The ElementTrafficLightFunction can now also define the background-color of an element.
          It is no longer needed to use a Rectangle-Element in conjunction with that function.

        * The RowBandingFunction now replaces the ElementVisiblitySwitchFunction to create
          alternating backgrounds in the reports. The RowBandingFunction modifies the element's
          or band's background color directly instead of showing and hiding an Rectangle-Element.

          The ElementVisiblitySwitchFunction remains alive for compatibility reasons.

0.8.9: (PRE-Version 10) (29-Aug-2007)
        * [BUG] The Table-Exporter contained a whole population of bugs in the
          SheetLayout handling. The mapping of backgrounds, borders, rounded corners
          as well as the legacy handling of rectangle, round-rectangle and line-
          elements was buggy.

          This bug fixes the Master-Bug PRE-48 and the sub-bugs PRE-47, PRE-17, PRE-26
          and PRE-25.

        * [BUG] The mapping of background colors to cells was invalid.

        * [BUG] PRE-16: The SheetName expression facility was broken and it was not
          possible to add sheetnames to the report.

        * [BUG] Layouting was wrong if an canvas element defined a border and or
          padding. The element started to shrink in a weird way. (PRE-45)

        * [BUG] The ElementTrafficLightFunction died with a NullPointerException if
          the function declared a different number of colors and limits.

        * [BUG] The border-rendering was invalid, which was greatly visible if the
          border was larger than 2 point.

        * [BUG] PRE-47: The SimpleXML parser contained a bug in the RoundRectangle
          element parsing. The round-rectangle element should have the 'scale' flag
          set by default.

        * [BUG] The water-mark used an invalid default-stylesheet and therefore was
          rendered in an invalid way by default.

        * [BUG] The layouted size of Bands was always larger than necessary. This has
          been fixed by giving the bands a default minimum-width of 100%. Any user
          definition will override this default and the layouter will shrink the
          band-element to the correct size.

        * [BUG] PRE-38; Reopen: To properly compute the vertical alignment of elements,
          we have to force the full recomputation on all block-elements. Middle-alignment
          behaved very strangely without that.

        * The Percentage-Expression always used abs() before computing the percentage.
          This was invalid.

        * Some minor performance improvements have been applied to the table-exports.

        * Some other performance improvements have been applied to the state handling
          which improves our memory-footprint.

        * The SQL-data-factory now recognizes the JDBC-Syntax for calling stored
          proceedures and maps these calls into a CallableStatement.

        * Defined compound-properties for the simple-parser to reduce the number of
          attributes that are required to fully define a common border. Added the
          missing border-corner properties to specify rounded corners.

        * Externalized all strings of the GUI. Now we can start to translate them.

        * New output processor feature: Pagebands can now be disabled globally.
          If the page-bands are disabled, the system will stop to generate any repeated
          header or footer, which is faster than hiding them.

        * The Excel-Export now emulates paddings by inserting artificial row- and column
          breaks.

        * Added some new functions: TotalItemMinFunction and TotalItemMaxFunction.

0.8.9: (PRE-Version 9) (15-Aug-2007)
        * [BUG] PRE-13: The CSV Export always printed an extra-comma after the last
          column.
          
        * [BUG] PRE-15: PDF and Graphics2D now support the Underline and StrikeThrough
          styles again.

        * [BUG] A table-export with a pagebreak inside a Block-Level element caused
          exceptions, as the system tried to work with negative coordinates. Boxes
          that were part of a pagebreak-set are now clipped to the current page area.

        * [BUG] PRE-38: Non-dynamic-height paragraphs with clipped content did not
          align the text-lines vertically. The text was always top-aligned.

        * [BUG] PRE-36: DateExpression and VariableDateExpression used the 12-hour
          'hour' field to feed the calendar-object that computed the date. The
          expression should have used the 24-hour field instead.

        * [BUG] PRE-34: SubReports crashed with an IndexOutOfBoundsException in the
          GlobalView class. This was caused by a couple of bugs in the datarow
          management.

        * [BUG] PRE-33: Printing AWT-Components using the Component-Field was not
          synchronized properly and was not executed on the AWT-EventDispatcher
          thread.

        * [BUG] The Bean-Handlers for BigDecimal and BigInteger were invalid. Any
          function that used BigDecimal or BigInteger parameters failed in the
          parser due to this bug.

        * [BUG] The TotalGroupCountFunction used an invalid event-filtering and
          therefore returned invalid results.

        * [BUG] The ElementTrafficLightFunction was not fully serializable.

        * [BUG] An empty Excel export caused a NullPointerException deep inside the
          Jakarta-POI library.
          
        * [BUG] PRE-40: The Excel-Export ignored any Drawable-Content due to an 
          invalid test.

        * The parameter passing mechanism has been modified. Results from Expressions
          that have been marked as preserve are only copied to the master-report if
          there is a export-parameter mapping for these expressions.

        * The Simple-XML parser now supports all the new style-properties.

        * The new FastGlobalView class improves performance. The 20.000 rows
          Huge-Report Demo is now processed in 46 seconds, instead of 76 seconds
          in the other 0.8.9-pre versions.

        * The ItemPercentageFunction got new properties for controlling the scale
          and rounding mode of the internal divide-operation and another boolean
          property 'scaleToHundred' that controls whether 100% is equal to the
          numeric value 1 or 100.
          
        * GUI updates: The preview dialogs now start with a sensible initial size.
          The maximum and preferredSize config-entries are evaluated again.
          
        * The menu-items and toolbar buttons get enabled and disabled according to
          the current state of the preview-components. If there is no report, none
          of the actions will be enabled. 

0.8.9: (PRE-Version 8) (06-Aug-2007)
        * [BUG] PRE-31: RTF export did not handle inline images.

        * [BUG] PRE-30: Rendering Paragraphs was invalid as paragraphs inherited
          non-inheritable styles to their pool- and lineboxes. This caused rendering
          and layout errors if the paragraph had background colors, borders or
          paddings defined.

        * [BUG] PRE-29: Borders with round-rectangles were not rendered correctly.

        * [BUG] PRE-28: SubReports sometimes crashed with an invalid-state exception
          in the DefaultOutputFunction.

0.8.9: (PRE-Version 7) (03-Aug-2007)
        * [BUG] PDF report generation would fail if the font family specified in 
          the report template could not be found / loaded.
          
        * [CLEANUP] Removed some old .cvsingore / .cvswrappers files that were 
          leftover from the move from CVS to SVN
          
        * [BUG] Fixed the names of the padding-* style-keys.

0.8.9: (PRE-Version 6) (01-Aug-2007)
        * [BUG] The Excel-Export crashed if images were printed unscaled.

        * [BUG] PRE-22: ReportController was not working as some events were
          not generated correctly by the PreviewPane.

        * [BUG] PRE-12: A FormulaParseError occured if the column-name was not
          valid according to the OpenFormula specification. Now column names are
          no longer parsed and will not have to obey to any arbitary specification.

        * [BUG] PRE-24: The Text-Ellipse (also known as 'reserved literal') was
          ignored by the Graphics2D and PDF output. Now overly long text is
          clipped at the end of the field and the defined text-ellipse is inserted
          to indicate that text has been clipped here.

        * [BUG] PRE-27: The PageTotalFunction produced invalid results, as the
          function's implementation did not handle the roll-back on pagebreaks
          during the report generation correctly.

        * [BUG] Several of the Total**Functions were invalid now and may have
          produced random results.

0.8.9: (PRE-Version 5) (23-Jul-2007)
        * [BUG] The ElementTrafficLightFunction contained an invalid cast, and
          therefore it did not work at all.

        * [BUG] The text alignment for the last visible line of text elements was
          invalid. Now for every text element, the last line contains all the
          remaining text so that the output processors can apply the ellipse-text
          if needed.

        * [BUG] Table-Exports where the last band contained a 'pagebreak-after'
          caused an empty extra-page at the end of the report.

        * [BUG] The Progress-Bar and Progress-Dialogs are now working again.

        * [BUG] PDF exports looked strange if some of the built-in fonts were used.
          This has been fixed with LibFonts 0.2.7, which uses iText to measure text
          sizes in these cases.

        * [BUG] PDF export created huge structures for text. This inflated the
          filesize of the generated PDF file. We are now using a different font
          rendering method, so that font-rendering is now less expensive.

        * [BUG] Hyperlinks were not working in Excel, HTML and PDF exports. This has
          been fixed now.

        * [BUG] Text that was truncated due to size-constraints on the text-element
          was lost. Now the last line of such text-elements contains all of the
          remaining text content. It is the renderer's responsiblity to trunkate
          the rendered text and to apply the 'ellipse'.

          Applying the ellipse-text is not done for PDF and Graphics2D outputs,
          this bug #1741685 is still pending.

        * Enabled access to the report's ResourceManager so that Expressions and
          Functions can safely load resources specified by relative paths.

          The master-report's ResourceManager and the Content-Base are available
          from the ExpressionRuntime. For sub-reports, functions can alternatively
          access the current report's content-base through the report-definition
          object. The resource-manager is always the same for all master and subreports.

0.8.9: (PRE-Version 4) (13-Jul-2007)
        * [BUG] The Page-Events were disordered and were not fired in the same
          order as the old engine did it. When the new system encounters a
          pagebreak, it eventually rolls back the report processing to fire the
          page-events after the last band that will fit on the current page has
          been printed and will regenerate the events that cause the next band to
          be printed after the pagebreak.

          This heavy-weight process ensures that page-footers always carry accurate
          information that match the last band that is printed on the page.

        * [BUG] The PercentageExpression (and therefore also the deprecated
          ItemColumnQuotientExpression) used native doubles for the computations,
          which causes strange results if an Division-by-zero is attempted. As
          native arithmetics also tends to be inaccurate, these expressions now use
          BigDecimals instead.

        * [BUG] Due to several bugs, the layouting behaved strange on pagebreaks.

        * [BUG] Replacing nodes in the layout-model did not remove all references
          to the replaced nodes which resulted in negative effects on both memory
          footprint and performance.

        * [BUG] PDFExport did not allow to set the "Keywords" and "Subject" meta-data
           on the document.

        * [BUG] The HTML-Export did not export any meta-data and did not generate
          a suitable "Title" for the generated document.

        * [BUG] Reports with a SimpleDateFormat in the Extended-XML that were
          created on JDK 1.5 or earlier but parsed on JDK 1.6 broke due to a silent
          change in the SimpleDateFormat class.

          A similiar bug has been fixed for DecimalFormat objects.

        * [BUG] Table-Exports with bands that had a 'pagebreak-after' set were invalid
          and caused pagebreaks after all bands for the entire report.

        * Progress-Events now carry the current and total number of processing stages
          of the report processing. This way, we can compute a linear progress indicator
          where no weird reset-in-between occurs.

0.8.9: (PRE-Version 3) (06-Jul-2007)
        * [BUG] Empty Cells in the HTML-Output should have a minimal font-size 
          set, so that the No-Break-Space character has a minimal visual impact.
	  
        * [BUG] Added some serialization fixes, so that reports that use the
          new features can be serialized and written/parsed by the Extended-XML
          parser/writer
	
        * [BUG] Setting a Pagebreak-After to elements caused all kinds of
          weird effects. This was caused by a whole series of bugs in the
          layouter.
	  
        * [BUG] RenderBox.replaceChild(s) was buggy and caused invalid references
          which prevented the garbage collection of the replaced elements.

        * [BUG] Empty Reports caused Exceptions in the Table-Outputs.

        * [BUG] The ..ReportUtil classes did not properly close the ReportProcessors
          they created. This prevents data-sources to be freed correctly.
	  
        * [BUG] The Plain-Text export crashed if it was executed on a page-spanning
          report.
	  
        * [BUG] The Center- and Right-Alignment was totally buggy. This fix reduces
          the visual impact of the bugs. Expect more fixes on that topic.
	  
        * Performance: Rewrote the ReportState system so that cloning states is
          a lot cheaper now.

0.8.9: (PRE-Version 2) (30-Jun-2007)
        * [BUG] Scaling images caused ClassCastExceptions

        * [BUG] PDFExport was not working. A NullPointerException prevented the
          export from starting, and a bug in iText's Graphics2D implementation
          changed the order of operations in the resulting PDF document.

        * [BUG] Absolute-Position Key was marked as Inheritable, which caused
          trouble in the layouter.

        * [BUG] The CanvasMajorAxisLayoutStep caused an ClassCastException.
          (Bug #1735786)

        * [BUG] Empty TableModels caused IllegalStateExceptions and other errors
          as the output processor tried to query the first row of these models
          no matter what the row-count said.

        * [BUG] The Fast-Text rendering was not working due to a couple of bugs
          in the buffer management.

        * [BUG] Re-Implemented the 'fixed-position' handling. Elements that have
          a fixed-position defined, will move the cursor forward to that position
          possibly causing pagebreaks in between. This is a required feature for
          form-printing.

        * [BUG] The page-spanning printing was no longer working correctly. The
          new implementation now also obeys to page-breaks and aligns text in a
          way that minimizes the number of words crossing inner page-boundaries.

        * [BUG] The text-alignment was not working properly causing all kind of
          funny effects, like missing linebreaks or misaligned texts.

        * [BUG] Excel-Export was not working at all. Now it is working, except that
          images are now always scaled.

        * [BUG] RTF-Export was not working at all. Now it is working, except that
          no images are displayed. (This was an buggy functionality in previous
          versions.)

        * [BUG] There was no bean-handler for Locale and TimeZone objects defined.
          Therefore parsing and writing functions that use one of these objects
          failed.

        * Added a more verbose logging mode to the Graphics2D output to make
          debugging easier.

        * Enabled the fast-text rendering for Graphics2D and PDF exports.

        * Implemented the 'font-smooth' stylekey handler. The Anti-Aliasing setting
          for each element can now be controlled independently (including the
          'auto' mode to disable font-smoothing on small fonts.

0.8.9: (PRE-Version - 27-May-2007)
        The rendering system has been replaced. The system does no longer use
        OutputTargets for the export. For details, see the file 'migration.txt',
        that is contained in each download.

        * [BUG] The last page-footer was not filled with values from the datarow.
          The Page-Function's count was invalid under some conditions.

        * [BUG] The data-transfer between subreports and their master-report was
          incomplete and only occured on 'itemAdvanced' events. Now the data
          gets synchronized on every event.

        * [BUG] The table-export did not handle bottom-border definitions correctly.

        * A single band can now span multiple pages. The pagebreaks can be
          controlled using the 'avoid-pagebreak' style-key.

        * All elements can have borders, paddings and background-colors.

        * The maximum-, minimum- and preferred height and width of elements can
          now be configured separatly.

          More important: the maximum and preferred sizes now behave predictable.
          Percentages are always resolved against the computed-height or width of
          the direct parent.

          Bands that contain only elements with percentage-heights or y-positions
          therefore resolve to a height of zero; and nothing is displayed.

        * Text-Elements have a couple of new style-keys to control the whitespace
          and linebreak-handling.

        * The 'layout-cachable' flag that caused so much confusion with dynamic
          layouts is finally dead and burried.

        * The demos have been moved into the 'jfreereport-demo' project.

        * The build-system has changed. The ANT-build.xml now resides in the project's
          root-directory (where everybody is looking for it). Until we have tool-support
          for the module-system and for maintaining the dependency-tree, we now only
          generate a monolithic build.

        ----------------------
        As this is a pre-version, there are some known issues and open-bugs.

        * The Card-demo is not working correctly due to a bug in the layouter.
        * The demos using a 'ReportController' have not been updated yet.
        * Reports that span several pages horizontally are not working due to
          a bug in the layouter (Page-Spanning World-Demo).
        * Linebreaking behaves strangely if there is not enough horizontal space
          (SurveyScale-Demo).
        * Inherited stylesheets seem to confuse the system. (StyleSheetsDemo, CardsDemo)

        * The Progress-Dialogs are not working correctly. They appear, but do not
          print the status messages yet.
        * The state-management in the GUI is somewhat messed up.
        * Not all texts in the GUI are localized now. Some localizations are now wrong
          and/or heavily out-of-date.
        * The XML parsers must be extended to provide access to the new
          style-capabilities. The XML-Writer must be updated too.

0.8.8-04: (02-Apr-2007)
        * [BUG] CreateHyperLinksFunction did not honor the 'window' property.

        * Refactored the 'ElementTrafficLightFunction' so that limits and colors
          are tightly coupled

        * Formula-Expressions now also accept the OpenFormula default context
          selector. This simply allows formulas to start with an equals-sign.

        Library fixes:

        * LibLoader: Fixed a very ugly bug that rendered the File-datasources
          unusable. This caused the many bugs that prevented subreports from
          being loaded.

        * LibFormula: Comparisons between two untyped objects did not work.
          Now the formula-evaluator tries to convert the untyped values into
          numbers, dates or strings (in that order) to make them comparable.

0.8.8-03: (07-Mar-2007)
        * [BUG] The subreporting code contained more bugs. I'm quite sure that
          this saga will continue for some time until we find time to do a
          proper debugging and possibly cleanup session in that part of the
          code.

        * This release shall be known as the 'It must get worse before it can
          get better' release.

0.8.8-02: (01-Mar-2007)
        * [BUG] Parsing from an InputSource with an null-context URL failed
          with a NullPointerException.

        * [BUG] Parsing from an InputSource that had no byte-stream assigned
          failed.

        * [BUG] Parsing from a file used the unsafe 'File.toURL()' method. This
          method is known to fail on directories or files that have spaces in
          their name. Now we use the 'file' object directly.

        * [BUG] The HTML-Export-Dialog started with an invalid state. The
          Stream-ExportMethod was selected but the data-directory input field
          was not disabled.

        * [BUG] The data-factory registrations were invalid, so that the parsers
          did not accept the datasource-xml files for parsing.

        * [BUG] PageFooters of master-reports were not taken into account when
          reserving space during the layouting. This caused overlapping outputs
          which not only looked ugly but also had other sideeffects as well.

        * [BUG] SubReports attached to the report footer were buggy. SubReports
          attached to the report footer were read from the PostReportInitialized
          state implementation as well - yet another stupid Copy&Paste bug.

        * [BUG] The print preview does no longer show 'null' in the window
          title if the report has no name set.

        * The new local configuration property
          'org.pentaho.reporting.engine.classic.core.modules.pageable.base.EmptyReportThrowsException'
          can be used to disable the generation of 'EmptyReportExceptions'.
          If the report is empty, the resulting report will be a single empty
          page.

        * The ReportGenerator class now has a new 'parseReport(..)'-method to
          load reports from a given ResourceKey.

        * [API] Added a couple of stricter checks to the existing API so that
          abuse of the API is punished as early as possible.

0.8.8-01: (25-Jan-2007)
        * [BUG] If more than one subreport has been added to a root level band,
          functions of subsequent reports were not activated properly.

        * [BUG] Table-Exports failed on subreports due to a missing check for
          deep-traversing report events.

        * [BUG] ThreeSubReportDemo did not declare the correct datasource.

        * [BUG] Parsing old ext-report definition files caused
          ClassCastExceptions as not all of the old ObjectFactory references
          had been mapped into the new locations.

        * [BUG] Using an namespace aware parser confused LibXML and thus it
          failed to parse the reports.

        * [BUG] SubReports were not able to declare input parameter mappings
          and the parsers did not allow to create them. The SubReport query
          and parameter mappings were not defined in the Xml-Schema file.

        * [BUG] The CompareNumberExpression failed if two Number-instances with
          different types (ie. Double and Long) were compared.

        * [BUG] Subreports added to the NoDataBand were not used.

        * [BUG] RoundRectangles and Ellipse-elements were not properly serialized
          and read when writing or parsing the Ext-Format.

        * [BUG] Page-Functions must use the 'deepTraversing' functionality if
          they should cover all subreports. They also have to check whether
          the current event originates from the master or a subreport.
          Until now, those functions didnt check that and so all kinds of
          strange results happened.

        * Parsing primitive values now trims the strings before parsing them.
          This gives more error-resistance while still being fully backward
          compatible.

        * The Excel-Export is now able to export hyperlinks.

        * All demos now use the new DataFactories instead of the deprecated
          setData(..) method.

        * The subreport demos were not added to the demo collection.

        * Page and group header and -footer can be marked 'sticky' now. Bands
          that are marked sticky will be printed on each page as if they were
          part of the subreport definition. Sticky bands do no gain access to
          the subreport's data, these bands can only access their own defined
          data-row.

        * The various DataFactories can now be parsed from an XML file and can
          be written to an XML file. All XML-enabled datasources can be either
          defined as inline-xml or can be references to external files.

        * Subreports can now be declared as inline reports. It is no longer
          neccessary to keep the subreports in separate files.

        * The PDF output target now accepts UTF-8 wherever it accepts Identity-H
          as encoding.

        * [External: LibFormula] Formula support has been greatly extended due
          to the hard work of Cedric Pronzato.

0.8.8: (22-Dec-2006)
        * [BUG] The CSV-DataExport always wrote the state column names, even
          if these columns were not exported at all.

        * [BUG] The HTML-Export lost the Vertical-Alignment if the resulting
          cell did not define a background.

        * [BUG] The Image-Field template did not use the ImageLoadFilter and
          therefore it never accepted any BLOBs or byte-arrays as input.

        * JFreeReport finally implements Master-Detail reports. The weird
          hacking as done in the "MultiReport" demo is no longer necessary.

          Multiple Sub-Reports can be added to the following root-level bands:
          - Report header and footer
          - Group header and footer
          - Itemband
          - No-Data-Band

          The order of the subreport declaration is important. Sub-reports are
          printed *after* the corresponding band has been processed.

          Functions do not receive any events from the subreports, unless they
          declare to be 'deep-traversing'. Computed results can be passed in and
          out of sub-reports using the input and export parameter mappings.

        * Data-Factories allow to produce resultsets from within the report
          processing. A single data-factory is used for the master and all
          subreports. The queries can be parametrized.

          An SQL/JDBC, a Java-Beans and a Table-base data-factory is available.

          The JFreeReport.setData(..) method is now deprecated. Using this method
          will override any previously defined data-factory and query-string.

          All data-factory can be defined in XML.

        * Sub-report demos exist now in the package 'org.pentaho.reporting.engine.classic.core.demo.subreport'.
          The old Multi-report demo is still there to show how bad it was in the
          past and how bright the future is compared to that.

        * Value formulas can be added to all *-field elements. These formuals
          allow small inline computations in excel-style. Formulas follow the
          OpenFormula syntax. References to other columns of the data-row must
          be contained in square brackets. All formulas must start with the prefix
          report, the leading 'equals' sign printed in Excel must not be specified.

          The following formula subtracts the value read from the column 'Actuals]
          from the datarow column 'Budget'.

          'report:[Budget] - [Actuals]'

          All operators specified in OpenFormula can be used. The known operators
          are: '+', '-', '*', '/', '%' (percentage), '&' (string concatation),
          '^' (power), '=', '<>', '<', '<=', '>=', '>'.

          LibFormula currently supports only a very small subset of functions.
          The OpenFormula functions that are currently implemented are:
          'ISBLANK', 'IF', 'AND', 'FALSE', 'NOT', 'OR', 'TRUE', 'XOR', 'DATE'.

          Additionally, we've added a few of functions:
          'HASCHANGED' (checks, whether the specified column has changed.),
          'NULL' (returns a null-reference).
          'ISEXPORTTYPE' (matches the current export type against a given export
                          descriptor).

          The OpenFormula specifications are hidden deep inside the Oasis-Open
          web-site. Finding them is not easy, so here's the direct link:

          http://www.oasis-open.org/committees/documents.php?wg_abbrev=office-formula

        * All *-field elements now accept formulas. The ElementFactories accept
          a new parameter for that purpose. Either a field or a formula can be
          set. If a field is set, the formula will be ignored.

          The following expressions have been marked as deprecated and can be
          replaced by a formula instead:

          - ColumnSumExpression
          - ColumnDifferenceExpression
          - ColumnDivisionExpression
          - ColumnMultiplyExpression
          - CompareFieldsExpression
          - PercentageExpression
          - ItemColumnQuotientExpression
          - IsExportTypeExpression
          - IsNullExpression

        * All elements and bands can now have style-expressions. The style
          expressions are evaluated before an element is printed. The resulting value
          will be used as value for the declared style-key. If the value is a string
          and the style-key expects an other object type, JFreeReport tries to convert
          the string into the target type using common bean operations.

          A style-expression can either be defined as real Expression implementation
          or by using a formula. API users can use the FormulaExpression to add
          formulas to elements.

          If a ElementFormat function is stateless, it can be expressed as simple
          expression instead.

          The following functions can be replaced by style-expressions:

          - ItemHideFunction
          - HideElementByNameFunction
          - CreateHyperLinksFunction
          - ElementColorFunction
          - ElementTrafficLightFunction
          - ElementVisiblityFunction
          - HideNullValuesFunction
          - HidePageBandForTableExport

          The ItemHiding-Demo shows how style-expressions replace the ItemHideFunction.

        * Report Properties are now always considered marked. Anything that is added
          as report property will automaticly be available as column in the report.

        * The Exportdialogs can be replaced by own implementations now. Replacing
          is easy: Set the dialog's classname in the configuration and implement
          the ExportDialog interface so that it configures the given JFreeReport
          object.

          As a side effect, anything that has been available in the dialogs is now
          configurable using the report configuration.

        * The report parsers have been migrated to LibXML. All report parsers are
          namespace aware and the report definition file structure is now defined
          in an XML-Schema file.

          Reports that still use the DTD will be automaticly mapped into the
          corresponding namespace.

          All demos have been changed to use the namespaces.

          The XML parser does no longer collect comments from the parsed XML.
          As I've never received any feedback or bugreports on that, I assume
          that noone uses it (anymore). The comment collecting made the parsers
          complex and unmaintainable and were simply wasted resources most of
          the time.

        * The XML-Parser now always uses the caching of LibLoader. As long as the
          cached object is available, the report will not be parsed a second time.
          An independent clone of the original (cached) report is returned instead.

        * The Extended-XML-Parser is now also able to use the parser-config for
          replacing CDATA and attribute values during the parsing.

        * Pasi Karppinen contributed a finish translation.

        * The Layout-Functions are no longer accessible on the data-row. Due to
          some internal reorganization of the code the Event-IDs and the numeric
          run-level ids have changed.

          The layout process has been split and uses dependency levels -1
          (preparation of content) and -2 (performing the pagination). Do never
          reference to the numers, use the constants in LayoutProcess instead.

          Function implementations that used the FunctionUtilities to test for the
          prepare- or pagination level are safe.

        * The PageableReportProcessor must be closed manually after the
          processing or the data-factory will not be closed and therefore resources
          assigned from the date-factory will not be released.

        * Internal: The ReportConnectable interface is gone. All DataSources get
          a ExpressionRuntime when being queried for values. Calling 'getValue(..)'
          from outside the reporting process may not produce correct results.

        * Internal: The LayoutEvent-IDs have changed. Recompile if you reference these
          IDs directly in one of your custom function implementations.

0.8.7-10: (2-Nov-2006)
        * [BUG] Updated the DTD to contain the stroke-style definitions.

        * Added support to concat PDFs to PDFExportUtil. (Mimil)

        * Updated the parser to spit out a explicit warning if JFreeReport
          has not yet been booted. Parsing will fail afterwards, but now it
          should be clear why and how to prevent it.

0.8.7-9: (26-Sep-2006)
        * [BUG] The report converter was not working, due to a missing
          call to boot the report engine.

        * [BUG] Follow-up to the inaccurate printing bug in 0.8.7-7:
          Changed the normalization transformation. It seems that this
          bug is related to an bug in the JDK that messes up the scaling
          (Java-Bug #4992456). The fix from 0.8.7-7 made things worse than
          better, so that patch was undone.

          Until there is a final solution, we cannot guarantee printout
          sizes in all cases. If the JDK behaves correctly, all measurements
          are given in point (assuming a resolution of 72dpi).

        * [BUG] Printing caused rendering errors in the report preview. This
          was caused by reusing the preview's report pane for the printing
          (to possibly avoid the repagination). Now a separate report pane is
          used on all printing operations.

        * [BUG] As long as we have to stick with iText, abstracting and
          caching the font creation is not possible. iText's font handler
          insists of either using *filenames* (not even URLs, that would be to
          simple) or byte-arrays to feed the font-data into the library. Using
          byte-arrays is out of question if you have to deal with 'Arial Unicode
          MS' (a 28MB font file), so we are effectively restricted to files.

          That means: LibLoader is not used for font loading anymore, we are
          back using the old an inefficient file-name passing.

        * [PERFORMANCE] Resolved some scalability issues when running several
          reports concurrently. The StyleKey-implementation caused some severe
          congestion due to some synchronization code, that - if written
          slightly different - could have been easily avoided.

          The original report was posted in the blog referenced below, and
          later also posted in the Pentaho-Forum.

          http://jroller.com/page/galina?entry=pentaho_jfreereport_reporting_framework_performance

        * Direct printing now supports to define the number-of-copies using
          the report configuration property
          'org.pentaho.reporting.engine.classic.core.modules.output.pageable.graphics.print.NumberOfCopies'

        * The Excel-Export is now able to append the generated report content
          to an exsiting workbook file. Radek Maciaszek wrote the patch for that.

        * ImageContent and drawable content can now also be loaded from an BLOB
          or byte-array. The 'image-url-field' and 'drawable-url-field' types
          now handles these source-types along with the URL loading.

0.8.7-8: (03-Sep-2006)
          This release contains bugfixes for the next stable version of
          Pentaho. Its always better to have an extra release than to have
          extra complaints, isn't it?

        * [BUG] The extwriter produced extra whitespaces for 'property-ref'
          tags with content inside.

        * [BUG] Images on page-spanning reports where misplaced if they crossed
          the inner page boundary.

0.8.7-7: (31-Aug-2006)
        * [BUG] Martin Schmidt reported, that the results of the ColumnMultiply,
          ColumnDifference and ColumnDivisionExpression were invalid, due to
          some stupid initialization bugs.

        * [BUG] Martin Schmidt fixed a ClassCastException in the
          ElementTrafficLightFunction.

        * [BUG] Repeating GroupHeaders of the outer-most group behaved invalidly
          and repeating group-footers did not reserve enough space to be printed
          correctly all the time.

        * [BUG] CSV separator was hardcoded.

        * [BUG] Printing was sometimes inaccurate, as some printer spoolers
          added some extra scaling to the process. We now try to prevent that
          by applying the normalization scale to the PrinterGraphics.

        * [BUG] The HTML-Viewer called Internet Explorer ignores vertical
          alignments on table-cells. Therefore, we now also add 'valign'
          attributes to the generated table cells in the HTML export.

        * [BUG] Exceptions when accessing encodings do no longer stop the
          GUI. There are still JDK bugs pending on that issue (particulary
          IBM-CP970).

        * [BUG] The HTML-Export GUI did not allow to place the data directory
          of the Directory-Export outside the directory containing the main
          HTML file.

        * Added 'org.pentaho.reporting.engine.classic.core.modules.gui.*.DefaultFileName' property key
          that could be used to give a default file name in export GUIs. Use
          '~/' to reference the user's home directory.

        * Added a caching parser frontend. Parsing is slow, so caching that
          (using libloader's cache) saves a lot of time. To use the cache,
          use the CachingReportGenerator instead of the ReportGenerator class.

        * The CreateHyperlinksFunction now has a new parameter called 'target'
          to specify the target-window of the generated links directly. This
          only affects the HTML export.

0.8.7-6: (27-Jul-2006)
        * [BUG] The PDFAction for generating links was invalid.

        * [BUG] The ColumnAggregationExpressions used double-variables for
          their computation. This caused accuracy issues. Now all computation
          expressions use BigDecimals for their computation.

        * [BUG] The DateCutExpression did not work at all.

        * [BUG] Setting a solid white background in Excel was funny, but
          stupid. Now cells have no background, unless specified explicitly.

        * [BUG] Graphics2D operations in the PDF export did not share the
          default font encoding and embedding settings of the PDFOutputTarget.

        * [BUG] A duplicate mnemonic for the english locale has been reported
          and fixed.

        * The StaticDataSourceFactory now accepts some more variations on the
          factory method syntax.

        * The ItemHideFunction accepts two new parameters (ignorePageBreaks,
          ignoreGroupBreaks) which allow to override the reset-behaviour.

        * The DateSpanExpression now also accepts Numbers.

0.8.7-5: (29-Jun-2006)
        * [BUG] Both the HTML-Export GUI and HtmlProcessor class did not handle
          the report configuration correctly, and therefore caused errors when
          trying to export to XHTML.

        * [BUG] Serialization issues caused by a stupidly placed 'transient'
          flag caused NullPointerExceptions after serialzing/deserializing
          of Number- and Date- fields.

        * [BUG] The I18N-Demo was not well-defined and thus one of the to-be-
          translated strings was totally buggy.

        * [BUG] The MessageFormatSupport crashed when the format string was
          buggy. Now it does no longer crash - it fails silently now (but
          drops a Log-message).

        * [BUG] The number-field and date-field did not use the locale
          defined by the ResourceBundleFactory of the report.

        * [BUG] Booting was not synchronized. (This has been fixed in jcommon).

        * [BUG] A bug in LibFonts caused some italics and oblique fonts to not
          be recognized correctly.

        * A primitive version of the Query-Interfaces of JFreeReport 0.9 have
          been downported into this version. The new DataFactory and Query
          properties of the JFreeReport object can be used to let the engine
          perform the query. These properties can also be defined in the
          XML definitions (using the <datafactory> tag).

        * The ReportDrawable interface offers an easy way for drawables to gain
          knowledge about their environment. Drawables get access to the report
          configuration, the current LayoutSupport and the element's stylesheet.

        * The Graphics2D that is passed to Drawable-instances for rendering is
          now preinitialized with the current font, stroke and paint.

        * The Internationalization-Demo now uses a ReportControler to allow to
          select the locale for the report at runtime.

        * The reset behaviour on new pages and group starts of the
          ElementVisibilitySwitchFunction can now be controled using the
          boolean flags 'resetOnPageStart' and 'resetOnGroupStart'.

0.8.7-4: (30-May-2006)
        * [BUG] The XML-Writer declared an obsolete system location of the DTD
          for the generated report definitions.

        * [BUG] The XML-Writer included the system properties (like "name" and
          "dependencyLevel" into the function's properties list.

        * [BUG] The Extended Report Definition DTD did not include the class
          attribute for properties.

        * [BUG] The BigDecimals were used with the 'double' constructor instead
          of using the 'string' constructor. Evil me.

        * [BUG] The Simple-XML's line reading was invalid for lines with X2 < X1
          or Y2 < Y1. The resulting element behaved funny, but definitly not
          correctly.

        * [BUG] An invalid cast limited the number of generatable Excel-rows to
          32768 instead of the physical limit of 65535 rows.

        * [BUG] A bug in the StaticBandLayouter caused elements with an x2, that
          is greater than the parent's usable space, to violate the parent's
          containing rule. This caused funny effects in the Excel export.

        * The Export-Dialog's habbit of storing the last user input for a report
          can now be configured using a set of new configuration properties.

        * The HTML exports 'copy-external-images' property is now configurable
          using the report configuration. It is enabled by default, so that
          all referenced images get copied into the specified data directory
          (or into the ZIP-File for the ZIP-Export).

        * The Stroke-Dashes are now based on the pen-width by default. The
          global configuration property 'org.pentaho.reporting.engine.classic.core.DynamicStrokeDashes'
          can revert this change to the old static version.

        * The stroke width for Excel-Exports now generates more suitable
          definitions by modifying a few range tests.

0.8.7-3: (26-Apr-2006)
        * [BUG] Previewing expressions did not work properly, as the preview
          expressions still referenced to the old row.

        * [BUG] The message-field and the MessageFieldElementFactory did not
          set the 'nullString' property, even if it was set in the
          ElementFactory.

        * [BUG] Missing or invalid encoding implementations do no longer
          interrupt the font registration process.

        * TextFormatExpression has been enhanced to optionally URLEncode the
          complete content or single elements.

        * A new URLEncodeExpression encodes Strings for URL-computations.

        * A new demo shows how to group against values computed from expressions.

        * A complete set of Greek translations has been written by George
          Hatzisymeon.

0.8.7-2: (28-Mar-2006)
        * [BUG] The page setup plugin was not initialized properly. In
          conjunction with other bugs (related to the export plugin handling)
          this made the page setup option totally unavailable.

0.8.7-1: (23-Mar-2006)
        * [BUG] The ExportDialogs did not allow the closing of the window using
          the normal operating system operations.

        * [BUG] Synchronization was awkward within the JDK1.4 printing
          (ext-project)

        * [BUG] The first pageheader of a report did not have access to a
          validly initialized datarow. This caused exceptions, troubles and
          weird behaviour.

        * [BUG] The Czech resources of PDF gui module were invalid. This
          has been reported and fixed by Ivo Panacek.

        * [BUG] The ToLowerCaseFunction did call 'toUppercase' which is
          outspoken stupid.

        * [BUG] Image sizing was wrong. There was an ugly mixup between the
          'point' and 'pixel' unit types, which caused images to appear
          smaller than they should be (or to be scaled where they should not
          be scaled). This primarily affected the HTML and Excel output.

        * [BUG] The stroke recognition was not correctly implemented and did
          not match the stroke factory. This affected the Excel and HTML table
          targets.

        * [BUG] The font mapper did ignore fully qualified font names. Fonts
          specified by their full name (Name Type '4') get now mapped to their
          font families.

        * Added flush() calls to all export targets, as unclosed and non-flushed
          streams seem to be a common source of errors.

        * New XML Elements exist for creating RoundRectangles and Ellipses.

        * The Logging to JDK 1.4 and Log4J has been removed from JFreeReport.
          These classes now form an library on its own and therefore are only
          dependend on JCommon.

        * Note: There is an unresolved bug in the RTF-Writer, which causes
          IndexOutOfBoundsExceptions.

0.8.7: (10-Feb-2006)
        * [BUG] Performing a pagebreak-before-print on a group header and
          printing values from the datarow in the pagefooter of the previous
          page already showed the contents of the to-be-printed group.

        * [BUG] Type1 Fonts can be embedded, if there is a 'pfb' file for that
          font. The old code simply declared all of these fonts to be
          non-embeddable, which is definitly not true.

        * [BUG] The excel export used the localized pattern to define the cell-
          format for number and date cells. This caused trouble in most non-
          english environments.

        * [BUG] The excel cell width factor was invalid and caused trouble on
          some systems. The new default scale factor has been increased to work
          around these problems. It can be adjusted using the report
          configuration for cases where the default is not appropriate.

        * [BUG] The excel color mapping was still buggy. The bug caused gray
          areas to be rendered in red shades.

        * [BUG] The line height of text elements was computed incorrectly and
          therefore clipped large glyphs. Now, the maximum height defined for the
          current font is used to define the line height.

          This bugfix is not enabled by default, as it has the side effect,
          that the effective lineheight is now greater than the font's declared
          height most of the time. Therefore an element with Arial 10 needs a
          defined element height of 11pt or 12pt to display a single line.

          Please read the corresponding section in 'migration.txt' on how to
          activate the bugfix.

          Setting a custom line height in conjunction with multiline elements
          caused exceptions due to another bug in that code.

        * [BUG] The TrueType support did not register the available fonts. Thus
          no truetype font information was used. Additionally, the PDF target
          did not apply bold strokes to the fonts.

        * [BUG] Component-Drawing was causing an infinite loop because of stupid
          coding.

        * [BUG] The preview components did not shutdown the repagination thread
          properly. The thread eventually lived forever, eating valuable resources.

        * [BUG] Groups declaring their headers to have a 'pagebreak-before-print'
          behaved differently than groups having a 'pagebreak-after-print'
          on their footers. This was caused by an incomplete roll-back of the
          layout-states.

        * [BUG] The About-dialog was a frame, which caused trouble on modal
          settings. Additionally, the export dialogs did not search the
          PreviewProxyBase's window when building the modal export dialogs,
          which also caused trouble in some (rather unusual) setups.

        * As a workaround for a bug in the JDK 1.5, DecimalFormats with
          an empty format string get initialized manually using a hardcoded
          format string as generated by JDK 1.4.

        * The Message-Format handling has been improved. The Message-field
          now recognizes the 'nullstring' attribute and replaces invalid or
          missing content with that string.

        * A huge set of new functions has been added to ease the handling of
          dates and strings, whithout having to fall back to BeanShell-Scripts.

          - a set of column aggregate expressions makes it easier to compute
            results from columns of the same row.

          - The DateExpression and VariableDateExpression allow the construction
            of Date objects by encapsulating the functionality of
            java.util.Calendar.

          - String functions allow to truncate, replace or transform strings.

          - Various compare functions allow to compare fields with static or
            other field values.

        * Expressions and functions now both have access to the current report
          configuration and the ResourceBundleFactory holding all the
          localization information.

          Warning: This changed the interface of the Expression class.
          Expressions and functions derived from AbstractExpression should not
          notice a difference in most cases and should work as usual.

        * The new field type 'resource-message' provides an internationalizable
          counterpart of the message-field. The field's format string is read
          from an resourcebundle and must have the same format as the
          message-field.

        * Shape-elements have a new property to define the stroke-type of the
          shapes contained in them. In the Simple-XML definition, a set of
          predefined strokes is available.

        * The ExpressionRuntime interface now allows expressions to safely
          detect the current export type.

        * A new band type is available to display special content if the table
          model of the report does not contain any data. The 'no-data-band'
          replaces the 'itemband' in such cases and is printed exactly one time.

          The new functions HideElementIfDataAvailableExpression and
          ShowElementIfDataAvailableExpression can be used to customize the
          report layout even further, if needed.

0.8.6-6: (27-Dec-2005)
        * [BUG] The demo did not initialize JFreeReport through the
          JFreeReportBoot class and thus ran into an ugly NullPointer.

        * The CSV-Data export is more configurable now. It does no longer
          add extra state columns by default and which bands should be exported
          can be controled using report properties. I also added some convienience
          methods to the CSVDataReportUtil so that exporting to CSV files
          is now a single line of code.

0.8.6-5: (21-Dec-2005)
        * [BUG] The colors used in the HTML export stylesheets were not
          conforming to CSS2.1. Users working with the internet explorer using
          one of the named colors in their reports did not see these colors at
          all, as invalid style definitions got ignored by the browser.

        * [BUG] The sheet-name function and the page headers in the table
          exports now always use the data from the next report state. This
          prevents some ugly misbehaviour when using 'pagebreak-after-print'
          flags on group footers.

        * [BUG] Duplicate values returned by the sheetName-function do no longer
          interrupt the report process in the Excel-Exporter. Invalid sheetnames
          do no longer cause trouble - they will be ignored.

        * [BUG] The cell-width and height computations in previous versions of
          JFreeReport have been some kind of voodoo. This has been fixed and
          now the width and height are always correct.

        * The Excel export target does now support images. Drawables get
          converted to images before they get added to the sheets.

        * The build process did not include the demo documentation files in
          the demo-jar.

        * Replacing the Exit and About-Action in the Preview-Dialogs works
          again. Replacing the navigation or zoom actions is no longer allowed
          (as it makes no sense to replace them).

        * The GUI-icons have been factored out into an own package. The
          skinning facility makes it easier to replace the icons and/or the
          resource bundles of the GUI components.

        * The PDF-Output target now interprets the '_blank' window name as
          command to open the link target document in a new window.

0.8.6-4: (20-Nov-2005)
        * (As the public CVS is not available, this release is used to make
          the current changes available to the public.)

        * [BUG] In the PDF output target printing scaled images did not work
          propertly, as the clipping code used the unscaled coordinates.

        * Removed most of the 'strictfp' modifiers. They were no longer
          neccessary and a bug in the IBM JDK tries to apply the class-wide
          modifier to all abstract methods as well, which renders JFreeReport
          useless on that JDK version.

0.8.6-3: (14-Nov-2005)
        * [BUG] Distributing text content over multiple pages caused exceptions
          if the string got split and continued on a later page.

        * [BUG] The ComponentDrawable was not able to handle java.awt.Window
          instances.

        * [BUG] The Excel-Color computation was totally messed up. The new
          algorithm uses science instead of magic (and HSB instead of RGB)

        * [BUG] The ImageContentFactory was not able to handle invalid inputs,
          which caused ClassCastExceptions.

        * [BUG] The image handling for the HTML export was invalid and caused
          ugly scaled images.

        * [BUG] The CSV and Excel export dialogs did not update the report
          configuration properly.

        * [BUG] The PDF export did not create italic or bold fonts. A new library
          was introduced to solve the problem. 'libFonts' allows to map fonts
          into Font-Families and to select the most appropriate font file for
          a given style.

        * JCommon has reached 1.0.0. JFreeChart users should switch to the
          latest CVS version of JFreeChart til the next release.

        * SurveyScale-Drawable is now serializable.

        * A 'PrintableTableModel' has been added, which allows to override the
          column names specified in the tablemodel. This is a contribution by
          'LordOfCode'.

        * Repeating Group-Footers have been implemented to support the printing
          of running totals in large lists, without having to use the pagefooter.

0.8.6-2: (17-Oct-2005)
        * [BUG] Having a pagebreak-after-print on a group-footer without
          having an report footer caused the table-type reporting to fail.

        * [BUG] Printing repeated group-headers used the wrong table row index
          if the printing occured if the group-header for the next group instance
          has been printed just before the pagebreak occured.

        * [BUG] An invalid computation of the maximum size of dynamic elements
          caused all content to disapear, if the absolute position of the
          dynamic element was greater than the horizontal space left for
          the element content.

        * It is now possible to add HTML link-targets to the elements. This way,
          the link can be opened in a named or new frame or window.

0.8.6-1: (12-Oct-2005)
        * [BUG] There was inconsistent behaviour when exporting single table
          reports using PageHeaders with 'print-on-lastpage' set to false.

        * [BUG] Exporting multipage-wide reports to the plain-text export
          did not work correctly.

        * [BUG] The TableExport behaved unpredictable, including raising
          errors when using the "StackedLayoutmanager". The real cause was
          hidden in the LayoutManager API which did not compute band sizes
          correctly. Combining relative y-positions and dynamic elements
          creates undefined behaviour and must be avoided at all price.

        * [BUG] The BaseFontSupport did not accept font files other than
         'ttf' due to an overly paranoid check. (Bug #1299056)

        * [BUG] The FunctionUtilities.findElement and findAllElements methods
          did not take the given root band into account and therefore only worked
          on subbands.

        * [BUG] The CSVTokenizer did not handle trailing commas correctly.
          Rob (redgeler), reported the bug and provided a test case to track
          it down.

        * [BUG] The PreviewDialog did not pass a 'parent' reference to its
          repagination dialog, thus making that dialog inaccessible.

        * Added a new Drawable-Element type to allow high-quality printing of
          AWT and Swing components. The component-element is available from within
          the SimpleXML, the ExtendedXML and the API. The new 'ComponentDrawing'-
          demo shows how to use it.

        * Modified the Simple DTD to make most of the style properties optional.
          Styles can be inherited using stylesheets, as shown in the new
          StyleSheet demo.

        * New Functions: PageItemSumFunction, PageItemCountFunction,
          HideNullValuesFunction and ShowElementByNameFunction added.

        * Minor performance improvements when handling singlelined text, which
          gives roughly a 25% bonus on the report processing time.

        * Modified the ANT-Scripts to make custom builds easier. All compilation
          tasks have been factored out and can be called directly using the
          'antcall' task.

0.8.6: (21-Sep-2005)
        * [BUG] The XML Parser handler for function properties did not handle
          specified classes correctly.

        * [BUG] Michael Tennes fixed a show-stopping bug in the text width
          calculation in the PlainTextOutputTarget.

        * [BUG] Changed the API of StaticImageElementFactory to fix some unclean
          method names. Also added a convinience property of type 'java.awt.Image'
          to the class.

        * [BUG] NumberFieldElementFactory and DateFieldElementFactory did not set
          the Null-String correctly. This affects the 'simple-xml' parser as well
          as the API report definition method. This fixes BugReport #1215492.

        * [BUG] The table exports did not handle the bottom and right most borders
          of a report correctly. These borders simply disapeared. This fixes
          Bug #1277214 and #1270744.

        * [BUG] Vertical alignment did not work in the HTML exports. This fixes
          Bug #1276626

        * [BUG] XHTML styles were not fully applied to the generated content.
          This fixes Bug #1280328.

        * [BUG] Removed the 'table-layout: fixed' style attribute, as it does
          have a negative effect with the MSIE and all other browsers seem to
          ignore it. (Bug #1276654)

        * [BUG] The HTML exports need to add no-break-spaces to empty cells,
          if not using CSS, messed up the export. The fix alters the font size
          to one point, and therefore minimizes the effect. (Bug #1277122).

        * [BUG] Ilkka fixed the Anchor support in JFreeReport. The Anchor element
          is now fully functional. (Bug #1293615 and #1290405)

        * [BUG] The XML-Parsers replaced the content for marked report properties,
          even if the report definition document did not specify any value for
          them. This bug prevented to mark the 'report.name' property.

        * [BUG] A bug in the TotalGroupSumQuotient-function family caused the
          functions to return invalid results.

        * [BUG] The XML parsers and writers used 'reverselandscape' as attribute
          value for the page orientation, but the DTDs declared it as
          'reverse_landscape'. (Bug #1297258)

        * The HTML renderer now has an option to switch to proportional column
          widths. The resulting table will consume the complete page width.
          (Patch #1282043)

        * The HTML and ExcelExports can now be used to export multiple reports
          in a single file using the new Appending*Processor classes.
          (Patch #1281142 and partial fix for feature request #1204087)

        * BSHExpression's createInterpreter is now protected to allow subclasses
          to modify the created instance.

        * Changed the PageEvent order. PageEvents are now fired before any other
          events are fired (but after the reportInitialized event). On pagebreaks
          the page header and the repeated group headers will contain the same
          computed values as the last page footer. This fixes Bug #1263817.

        * More work at the JavaDoc and DocBook texts.

        * It is now possible to span a report over multiple pages. For best
          results, the elements should not cross pagebreaks. JFreeReport handles
          that case, but the resulting output is not perfect.

        * Added the StackedLayoutManager, which behaves like a Swing-Box-Layout.
          Use this within a band to allow dynamic elements to push other elements
          below the used space of the dynamic element. See the StackedLayoutDemo
          for an example.

        * The SimpleXML-Parser is now able to assign a global stylesheet to
          the generated elements. The new attribute 'styleClass' must contain
          the name of the stylesheet. If the stylesheet does not exist, it will
          be created and can be modified after the parsing is complete.

        * The demos have been restructured. Every demo now has a longer text
          describing the purpose and structure of the demo.

        * All deprecated classes have been removed.

        * The Report configuration is no longer responsible for providing a
          global configuration. The JFreeReportBoot class holds the global
          config, which can be retrieved using
          'JFreeReportBoot.getInstance().getGlobalConfig()'.

          Initializing the log system should be done using the properties
          file or by querying 'JFreeReportBoot.getInstance().getEditableConfig()'
          and updating the properties there.

        * Booting JFreeReport before it can be used is now mandatory. Booting
          is done using 'JFreeReportBoot.getInstance.start()'. Without this
          initialization, you *will* experience trouble.

        * Added a switch to use either the MasterSelect command or a series of
          single commands to define the font properties on Epson 9-pin printers.

        * It is now possible to access the raw datasource (the TableModel) using
          the system maintained report property 'report.datasource'. If the
          property is marked, even expressions will be able to access the
          datasource.

        * The layout manager is now able to apply limited caching to dynamic
          elements. Although still slower than static elements, this caching
          prevents unneccessary recomputations between layouting and printing.

        * Changed the Key-Binding for the Preview-Component's Next- and Previous
          Page action to plain keystrokes. From now on, a simple PageDown or
          PageUp is sufficient to navigate through the pages.

0.8.5-5: (1-Jun-2005)
        * [BUG] The ItemHideFunction did not reset the visible state to visible
          after a pagebreak.

        * [BUG] The include parser did not setup the EntityResolver correctly.
          This caused trouble when working without an internet connection.

        * [BUG] The Excel cell style provider created too many styles due
          to an invalid key used for checking whether a style already exists.

        * [BUG] Discovered and fixed some bugs using the 'FindBugs' tool.

        * [BUG] Fixed an error condition, where an non-absolute path could cause
          a NullPointer if the parent directory could not be resolved.

        * [BUG] The XML-Parser's support for indexed function properties has
          been fixed.

        * The classloader handling is now configurable via JCommon. By default
          the ThreadContext-classloader is used now.

        * The one-to-many demo got an API-only counterpart. Noone is forced to
          use the XML definition.

        * There were some ugly bugs in the I18N report support. The I18N demo
          is now working as expected.

        * Excel reports with more than 4000 different styles to no longer break
          the file format. JFreeReport will not create more than 4000 styles in
          a single report (all extra styles are discarded and the cells left
          unstyled).

        * The HTML export now allows border definition in the <tr> elements.
          This is a workaround for bugs in the Mozilla table renderer. The
          setting is configurable using the report configuration with the
          key 'org.pentaho.reporting.engine.classic.core.modules.output.table.html.TableRowBorderDefinition'.

0.8.5-4: (15-Apr-2005)
        * The location of the ReportControler can now be defined from
          within the ReportControler.

        * [BUG] The TableLayouter does no longer use heuristics to compute
          the layout. Now every layouted cell has its own TableCellBackground
          instance - this makes computing more accurate but also more resource
          intensive.

        * [BUG] Excel-CellStyles are now applied to all cells of a region.
          (Bug #1172423)

        * [BUG] CSVContentCreator used an invalid offset and therefore did not
          generate valid content.

        * [BUG] The demo-jar classpath did not include the misc-survey module.

        * [BUG] FunctionUtilties.findElement(..) and
          FunctionUtilities.findAllElements (..) did not check the names of bands
          and therefore did never return band references.

        * [BUG] Some bugs were fixed in the include-functionality of the
          JFreeReport XML-parsers.

        * [BUG] Fixed some bugs in the SurveyScaleDemo (missing resources) and
          SurveyScaleExpression (adding 'field' property failed).

        * [BUG] DemoFrontend did not give error messages, when the start of the
          demo failed.

        * The org.pentaho.reporting.engine.classic.core.modules.output.table.html.EmptyCellsUseCSS
          configuration property controls how empty cells are handled. By
          default no CSS is used (as the InternetExplorer gets confused by
          standards). This is a follow up to Bug #1165992.

        * The DEFAULT_GROUP_NAME constant of GroupList is now public. This
          constant defines the name of the automaticly created default group.
          That group is created to prevent an empty GroupList, if other groups
          exist for the report, the default group might not exist.

        * To help Mozilla/Firefox render generated HTML pages correctly, the
          HtmlContentCreator now also adds border and background definitions to
          the table row element style.

        * All tables now have a ColGroup tag to define the table's column widths.
          This way even large tables get rendered correctly even if not all data
          is received.

        * A new demo shows how to join several reports into a single report. A
          new JoiningTableModel has been added to simplify the task of creating
          a suitable tablemodel for that report.

0.8.5-3: (25-Mar-2005)
        * [BUG] The GUI-ExportTasks now create missing directories, if
          necessary. The HTML-Directory Export's data directory is now
          relative to the specified HTML file and no longer to the current
          working directory.

        * [BUG] Merging lines and backgrounds in the TableExports was invalid.

        * [BUG] StaticLayoutManager's caching worked to hard and stored
          intermediate values, which caused elements with a fixed width and
          relative height to be way to large.

        * [BUG] The 'pagebreak-before-print' and 'pagebreak-after-print' of
           the SimpleXML DTD were inconsistent. Now all pagebreak attributes
           use the names given above, as these attribute names have been
           used for the group header/footer for some time. (closes #1165942)

        * [BUG] TableBackground-borders with a width of '0' should not be
          activated. Such borders must have their color set to 'null'.
          (closes #1166296)

        * [BUG] Duplicate logging of the project info can be confusing.
          Removed the log statement from JFreeReportBoot. (closes #1166415)

        * [BUG] The PDF default encoding of the module configuration was set to
          Cp1251 (which is cyrillic) but should have been set to Cp1252 (WinAnsi)
          (closes #1165907)

        * [BUG] The output-pageable-base module did not jave the output-meta
          jar file included in the classpath. This seems to kill the demo on
          some systems. (closes #1168342)

        * [BUG] The HTML-Export now uses the fixed table-layout alogorithm as
          specified in the CSS-standard. Additionally, the total width of
          the table is now specified in the table tag to help the HTML renderer.
          Column widths are now specified using the '<col>' tag. (closes #1165992)

        * [BUG] The HTML-Export does no longer generate &nbsp; for empty cells.
          The CSS-property "empty-cells: show" is used instead. (closes #1168156)

        * [BUG] In the Excel-Export row heights and cell widths were unreliable.
          The row height are now set according to the POI documentation (1/1440th
          of an inch as unit).

          For the cell heights Arial 10 is set as default font and all cell
          heights are computed with an assumed character width of 5 points.
          The way how cell widths are computed is way to weird, you wouldn't
          believe it (I still have problems to believe it).

        * The Demo-Jar now uses the DemoFrontend class as Main class. This way,
          all demos are accessible when running that jar.

        * The SimpleXML format now defines a new attribute for Number and Date
          fields to supply an explicit cell format for the Excel export. Excel
          does not really like the Java-Formats and as there is no reliable
          specification  for the excel format strings on the net, this is a
          workaround to get good looking excel exports.

        * Added support for report constomizations from within the Preview
          components. A "ReportControler" can now be assigned to the preview base
          to supply additional menus and/or a custom property editor panel.

          The ReportControlerDemo demonstrates how this could be used.
          (closes request #1162404)

        * The SwingIcons demo has been changed to search for the 'jlgr-1_0.jar'
          on the classpath, the directories containing classpath-jars or the
          local working directory. If that fails, the user now can specify a
          custom location for the icons.

        * The PDFExportDialog now maps the UTF-8 and UTF-16 encodings to the
          PDF Unicode encoding "Identity-H". Using the UTF-encodings directly
          was a great way to produce reports without a single character of
          text inside.

0.8.5-2: (18-Mar-2005)
        * [BUG] FontPath caching did not validate the cache integrity. This way,
          some fonts might be left unregistered.

        * [BUG] The image content class did not refuse bounds with a
          width or height of zero. Such content would never be displayable
          and should therefore be removed as early as possible.

          In the same class, the image scaling code tried to use an integer
          division to compute the scale factor. That resulted in a scale factor
          of zero in all down-scale operations.

        * [BUG] Drawing scaled image content was wrong in PDF and Graphics2D
          targets. The HTML target did use the unscaled image size instead of
          the computed (scaled) bounds for the <img> tag.

        * [BUG] PageHeader/Footer handler of the SimpleXML parser did not
          parse the onfirst/lastpage attribute. The ReportHeader/Footer handler
          did not parse the (deprecated) ownpage attribute.

        * Added verbose warning messages if image loading failed.

        * Added deprecation warnings for the old report DTDs.

        * All Export Dialogs use lazy initializations now, wherever possible.
          This way, the preview dialogs show up a lot faster than before.

0.8.5-1: (10-Mar-2005)
        * [BUG] The PDF did not setup the first page correctly.

        * [BUG] Images were not exported to PDF due to a bug in the
          clipping setup.

        * [BUG] filling shapes seemed to put the output target into an
          invalid state; therefore an alternative way to draw and fill
          shapes and process Drawables has been implemented.

0.8.5: (4-Mar-2005)
        * The modules are now named after their java package names and
          correspond now with the jar file name.

        * The naming schema for the jar files changed to fit the common
          naming schema used in Maven and other OpenSource projects.

        * All output target generate 'output-complete' events whenever
          a root level band has been successfully printed.

        * Most of the deprecated code has been removed. Due to the heavy
          nature of the other changes, also many non deprecated methods
          have changed.

        * All ResourceBundles used by JFreeReport have been converted to
          property files for better maintainability.

        * The Boot process of JFreeReport now integrates into the jcommon
          boot system; a new boot loader implementation (JFreeReportBoot)
          provides the boot loader for this library.

        * Images are no longer required to be loadable. The ImageReference
          interface is used to define the image sizes and URLs. There is
          no need to load the image anymore. This allows references to
          image sources, which are not reachable for the report generator.

        * Images and Drawables are now loaded using a separate factory,
          so that Pixie is no longer a hardcoded requirement. If during
          the boot process the Pixie library is detected, support for WMF
          images and drawable will be available.

        * All output targets use 'MetaBands' to produce their spool
          content. This makes implementing other target less error prone.

        * In the pageable output targets, the report state list is no
          longer public. All state information is now handled by the
          pageable report processor so that there is no way to tamper
          with internal states.

        * The PlainTextOutput targets have been completly rewritten.
          (thanks Michael Tennes for all the debugging, patience and
          tips and tricks).

        * This implementation has now a complete ESC/P printer driver
          and makes sure that your epson compatible matrix printers will
          have some happy days in the Java world.

        * The table targets have been completly rewritten. The old
          implementation produced invalid results and was impossible to
          debug.

        * HTML targets now support body fragment generation. This makes
          it possible to use the output from JFreeReport in JSP-Include
          files.

        * The RTF target is now fixed and considered stable enough to be
          fully supported. Images are still unsupported, as this consumes
          to much memory to be handled safely for now.

        * The Excel target now allows alternate cell-format definitions.
          This resolves issues, where Excel's internal format definitions
          are incompatible with the Java definitions.

        * The numeric and date data cells now use the original raw data
          instead of parsing the formatted content string. This preserves
          the full precision of the contained data.

        * Functions and Expressions now use the bean-interface for their
          configuration; the explicit use of setProperties (..) has been
          removed in favor of the get/set methods of the Bean-API.

          The parsers currently support parameters of the following types:
          - java.math.BigDecimal
          - java.math.BigInteger
          - java.lang.Boolean
          - java.lang.Byte
          - java.lang.Character
          - java.lang.Class
          - java.awt.Color
          - java.lang.Double
          - java.lang.Float
          - java.lang.Integer
          - java.lang.Long
          - java.lang.Short
          - java.lang.String
          as well as all primitive values and all values that define a
          java.beans.PropertyEditor that supports the configuration using
          PropertyEditor.getAsText() and PropertyEditor.setAsText().

        * A PageDefinition object is now used instead of the
          java.awt.print.PageFormat object. This will allow the definition of
          printing areas that consist of multiple physical pages.

          The support for larger than 1x1 page-set is untested and should be
          considered experimental for now.

        * ReportStates allow access to the current page definition object from
          within functions. The ReportProperty "report.pageformat" should not
          be used anymore. That property will contain the first page format.
          Obviously, this is invalid, if more than one pageformat is defined.

        * The page definition is now the only source for the page format;
          all constructors accepting page formats have been removed from
          the report processors.

        * The ReportConnectable interface replaces the DataRowConnectable
          to allow access to the complete report definition during the data
          preprocessing.

        * Resourcebundles for the ResourceFields are no longer loaded directly.
          The ResourceBundleFactory from the ReportDefinition object is now
          used as source for the ResourceBundle.

        * Function and expression handling is now unified. The distinction
          between the various function types is now classified as an internal
          secret. For the users, functions should be not more than a special
          kind of expressions.

        * Root-Level bands can now have a fixed start position on the page.
          This solves the various requests for the report or group footers
          printed at the bottom of the page. Be aware that the Layout-Engine
          will abort the report generation, if the fixed footer does not fit
          completly on the current page. Using dynamic elements in such bands
          can cause trouble.

        * TextElements bind the encoding of their content; multiple encodings
          can be used within a single PDF document (that feature has been
          silently implemented in the later 0.8.4 versions, and is now ready
          to be used officially)

        * Horizontal lines no longer use the x1==x2; y1==y2 form of definition.
          Now lines use the relative coordinates like all other elements
          (width="100%") Special factory methods have been added to the
          StaticShapeElementFactory so that vertical and horizontal lines can
          be generated more easily.

        * LayoutManagerCache now uses the Element's InstanceID as key for the
          cache. This increases the performance a lot (HugeReport6: from 84 sec
          to 35 secs). Elements that will have their sizes or position be modified
          by the user must be marked uncachable by using the stylekey
          ELEMENT_LAYOUT_CACHABLE set to 'false', or the layout might be invalid.
          Dynamic elements are never cachable.

        * The PDF target caches the used images. It also does no longer try to
          encode all images as PNG files - this was completly unnecessay and
          just stupid.

        * Some minor performance improvements have been made in the stylekey handling.

        * An user defined configuration can be added to the ReportConfiguration.
          This way JFreeReport can use other frameworks as configuration source.
          (Based on a suggestion by 'bitstorm').

          Use the 'setUserConfig' method of the ReportConfiguration class to
          include the configuration implementation.

        * The XML-parsers can be used to configure an predefined JFreeReport
          instance. This makes it possible to supply an own JFreeReport
          implementation to the parser..

        * The PageFinished event is now handled correctly. This catches all
          pagebreak related bugs.

        * MessageFormatElements (contributed by Joerg Schaible) have been added.
          These elements allow to join and format text in a similiar way as it
          is possible with the TextFormatExpression.

          DataRow-columns get referenced by using $(columnname) instead of
          the parameter index of the MessageFormat format string.

        * A PageOfPagesFunction (contributed by Joerg Schaible) greatly
          reduces the complexity when defining the common 'Page x of y'
          fields.

        * All Preview components now use a factory method "protected
          PreviewProxyBase createPreviewProxyBase ()" to create the
          ProxyBaseImplementation. This should make it easier to replace
          the PreviewProxyBase with a custom implementation.

        * PDF- and HTML-Targets now support Anchors and Hyperlinks.

        * The ElementStyleSheets have a cleaner semantic now. There are
          two classes of stylesheets, the ones assigned directly to the
          elements and bands and the global ones, which are created and
          managed by the StyleSheetCollection.

          Only on default parent can exist, and one cascading parent,
          which links the elements to its parent bands. Bands do no longer
          have two unrelated stylesheets, now they inherit their primary
          stylesheet to their parents. This way, the inheritance change
          can go from the root level band to the last child, allowing the
          same inheritance chain as found in the cascading stylesheets.

          The BandDefaults have been removed.

        * Simple XML parser has been completly rewritten and uses now a
          framework initially created by Peter Becker. Support for the new
          features has been added.

        * Support for Include-files added to allow to reuse common parts
          of the report definitions (like report header/footer,
          page header/footer, or everything else)

          There is no limitation in how many reports get included or in
          which XML-format was used as definition format.

        * Support for the ImageIO API of JDK1.4 has been added to JFreeReport-Ext.
          As soon as JFreeReport-Ext is on the classpath, the resource factory
          will start to use these new image loaders.

        * BarCode support has been added by Mimil (JFreeReport-ext).

        * The servlet demos have been updated to demonstrate the use of
          custom URLImageContainer implementations to include images in
          StreamHtmlReports (JFreeReport-ext).

        * The ExportDialogs have been redesigned to behave a little bit better.
          All the annoying popup windows have been replaced by a less annyoing
          status bar.

        * BugFix: The layout manager did not align elements according to the
          output target's properties. This made plain text output almost impossible.

0.8.4-11: (13-Oct-2004)

        * BugFix: Watermark-Band elements were not connected to the
          datarow, causing all non-static elements to fail.

        * BugFix: Selecting fonts in the PlainText-OutputTarget was not
          supported.

        * BugFix: JFreeReport now uses the latest JCommon to fix that
          nasty recompile problem when used together with JFreeChart.

        * BugFix: Changing PageFormats was buggy and caused the margins
          of the page to be swapped.

        * BugFix: The ItemMin- and ItemMaxFunction where inizialized in
          an invalid way and therefore not working as expected.

        * BugFix: The PDF-OutputTarget always created PDFs with embedded
          fonts, defining the embedded value in the configuration had no
          effect. To fix that, a new constructor was added which does no
          longer set the embedded property.

        * BugFix: PDF-Font creation caused OutOfMemoryErrors in case the
          font creation failed several times before. Support for truetype
          collections was not correctly implemented.

        * A new function was added to support pagefooter printing on only
          the last page.

        * David Gilbert created a new module to support survey reports.
          The SurveyScaleDemo shows how to use that new feature. The survey
          module is not yet configurable with the XML report definitions,
          this will be included in later versions of JFreeReport.

        * Two new demos show, how it is possible to misuse the page-footer to
          print a report-footer at the bottom of the last page.

        * The used libraries were updated to the latest stable versions
          available.

0.8.4-10: (27-Apr-2004)

        * BugFix: Excel export threw exceptions if an background
          spanned more than one row or column

        * BugFix: PDF and RTF export failed on non-embedded fonts.

        * BugFix: The Simple XML parser threw exceptions if a
          number or date-field definition did not specify a format
          string.

        * BugFix: Replacing the report object in the preview dialogs
          could cause the next reporting to fail with an
          "ReportInterruptedException". This was caused by not waiting
          for the repagination worker to shutdown properly.

        * BugFix: The ReportWriter caused trouble when trying to write
          DecimalFormat objects. Fixed is contained in jcommon-0.9.3a.

        * A new demo shows how to use conditional groups.

        * The swedish translations were updated by Ulf Ekstr?m.

        * The PlainText target now offers the option to specify an
          initialization string, which is sent to the printer before
          any other content is printed.

        * JFreeReport now compiles on JDK 1.5 without warnings.

0.8.4-9: (6-Apr-2004)
        * BugFix: The BaseFontSupport and the PDF output target
          did not handle iText fonts correctly resulting in a
          memory leak.

        * BugFix: An exception occured whenever a band flagged with
          "pagebreak-after" did not fit on the previous page and was
          printed during the page-open process

        * BugFix: The TableTargets did not format row/colspanned cells
          correctly. Credits for detecting this bug goes to mechiland.

        * BugFix: The HTML Target did not close all table data elements.
          Credits for detecting this bug goes to mechiland.

        * BugFix: The paint component function did not layout given the components
          correctly. Using non-opaque components did not produce valid results.

        * BugFix: The PageFormatFactory did not correctly convert millimeters
          into points. (2nd Try)

        * BugFix: The font path detection of the itext-support was not
          case insensitive causing wrong results on some systems.
          Thanks mechiland for your reports.

        * BugFix: Fixed some typos

        * BugFix: Fixed several synchronization issues with singleton implementations

        * Whether a repeating group header should be printed for a lonely
          group footer can now be configured using the report configuration.

        * ResultSetTableModel classes now try to recover from errors when
          examining column types. Thanks, Roger Hayes for your great code.

        * Introduced better support for form printing by adding a "fixed-position"
          stylekey. Group- and report header and -footer and the itemband can now
          be printed at a fixed position on the page.

        * New Demo: Invoice demo shows a complexer invoice example.

        * New Demo: Form demo shows a simple patient form and demonstrates the usage
          of the new fixed-position key.

0.8.4-8: (04-Feb-2004)
        * BugFix: The ConfigStore module was totally messed up.

        * BugFix: The PlainTextExport contained a really strange
          implementation to handle borders. That thing did not work
          as expected and was removed.

        * BugFix: Many, many synchronization issues resolved. Most
          of the old stuff was incomplete or just stupid. Hopefully
          it is better now :)

        * BugFix: The report footer's ownpage attribute was not handled
          correctly in the simple xml parser.

        * Dialogs now store the last user input for a certain report.
          The input is keyed by the report's name, so it is important
          to give every report a unique name.

        * Group exception messages and SizeCalculator exceptions are
          more chatty now.

        * The BOUNDS style is no longer written when serializing reports.

        * The baseURL of the ImageURL* Templates will no longer be written.
          The baseURL points to the URL of the report definition and is
          set by the parser.

        * The PreviewComponent's toolbar has now the option to add a
          close button to the toolbar.

        * The PreviewComponent's toolbar now allows to add custom actions
          to the toolbar. The actions must be supplied in the "customActions"
          action map.

        * The Drawable renderer of the PDF output now uses the BaseFontFactory
          to resolve font requests.

        * Whether a ProgressDialog or the progressBar is shown is configurable
          now. The progressdialog can be configured for every export plugin;
          the progress bar is only available in the preview frame and cannot
          be used to monitor the export progress.

0.8.4-7:
        * BugFix: The simple parser did not handle the font encoding
          attribute of bands correctly.

        * BugFix: Hidden root level bands should not consume any space.

        * BugFix: Javac 1.2 complained a lot about coding errors. The
          errors it noticed weren't there, but the code changed to make
          that stupid thing shut up.

        * BugFix: The PageFormatFactory did not correctly convert millimeters
          into points.

        * BugFix: The HTML export created buggy code; The head-tag was not
          closed properly and the <td> tags contained invalid widths if
          the columns defined a colspan.

        * BugFix: PageHeader and -footer now obey to both the "display-on-first-page"
          and "display-on-last-page" flag.

        * All supplied jars are now built with JDK1.2 to get rid of the
          AbstractMethodExceptions caused by the JDK1.4 class files.

        * Support for watermark-bands was added.

0.8.4-6 (25-Nov-2003):
        * BugFix: In some cases the band layout manager "lost" the
          reference to the local LayoutSupport. This part was ugly
          and was completly rewritten.

        * BugFix: Repeating group headers were lost if the printing
          of the group footer of that group was delayed until a new
          page was started. The inner most group header was not printed
          in such cases.

        * BugFix: Exceptions in the SimplePageLayouter may be lost when
          the clearCurrentEvent() method throws an other exception. This
          was stupid coding and this method does no longer throw that
          unnecessary exception causing all the trouble.

        * The preview components are now fully configurable. The creation
          and contents of the toolbar and menubar can now be controlled
          using the report configuration.

        * The preview base is reuseable now. The report can be redefined
          using the setReport(..) method.

        * The Total* Function now support a global computation, if no
          group is defined. They do no longer depend on the existence
          of the default group.

        * JFreeReport now prints the current version of the Core-Module
          during the boot process.

0.8.4-5 (07-Nov-2003):
        * BugFix: The report footer was not printed, if an automatic
          pagebreak was done right before the printing of the footer.

        * BugFix: Minor fixes in the simple parser to improve
          the quality of the generated report definition.

        * BugFix: DrawableTemplate did not implement DataRowConnectable
          and was not available in the ext-parser.

        * The export plugins of the GUI are better configurable now.
          The report configuration can be used to define, whether a
          plugin will appear separated from previous menu entries or
          whether the export will be selectable from the toolbar.

        * The ResultSetTableModelFactory can now be configured to map
          either ColumnNames or ColumnLabels to the column indices.

        * The PreviewBase has been reworked to be more extensible.

0.8.4-4 (01-Nov-2003):
        * BugFix: TotalItemCountFunction is now serializable and handles
          nested groups correctly.

        * BugFix: ExportPlugins had a weird way of registering themself on
          the ReportProgressDialogs

        * BugFix: SimplePageLayouter did not implement getInstance() correctly.

        * BugFix: TextElement.setLineHeight tried to use Integer where Float
          was expected causing ClassCastExceptions.

        * BugFix: The PackageManager did not accept some of the version strings
          correctly causing all export plugins to fail. Additionally all
          warnings were suppressed.

        * TextElements can now trim the textlines to make the aligned content
          look properly.

        * The simple xml parser now allows to define the reserved-literal, the
          string which is appended when a text does not fully fit into the
          elements bounds. Additionally, the simple parser now can define the
          trim-text property for all text elements.

        * A new demo shows the usage of ReportProperties.

0.8.4-3 (22-Oct-2003):
        * BugFix: PlainText output fixed. It was funnily messed up when
          handling borders and was fed in the wrong way by some of the demos.

        * BugFix: TotalItemCountFunction fixed; another stupid Copy&Paste
          bug :(

0.8.4-2 (19-Oct-2003):
        * BugFix: Exceptions in the repagination did not close the progress
          monitor.

        * BugFix: InternalFrames did not repaint due to a weird use of the
          RepaintManager in the PreviewProxyBase and some other stupid bugs.

        * BugFix: Non-Embeddable fonts cause no longer fatal errors. If such
          an font is encountered, it will be included as non-embedded font.

        * BugFix: The table targets were completly broken, they have been reworked
          and all direct and indirect causes (aka bad code) was fixed.

        * BugFix: SimpleParser's subbands did not work as expected.

        * BugFix: The export did not show the correct result in the dialogs status
          bar. The synchronisation/locking schema was invalid for all exports.

        * BugFix: Serialization issues fixed for various functions.

        * BugFix: The line-height definition of the TextElementFactory used
          the wrong type causing ClassCastExceptions to be thrown by the
          stylesheet implementation.

        * The preview components can now perform multiple exports at the
          same time. Currently 10 parallel exports are possible, this will
          be configurable later.

        * The element color function does now work with all bands of an report.

        * The TotalItemSumFunction can be used to precompute group results.

        * Warning: (ElementVisiblitySwitch function does not work correctly;
          this will be fixed with version 0.8.5)


0.8.4-1:
        * BugFix: InternalFrame was not closed properly and caused NullPointers
          in Swing.

        * BugFix: PaintComponentFunctions did draw on a black image. It is now
          transparent instead.

        * BugFix: Band.remove caused exceptions when the band was connected
          with the report.

        * BugFix: Printing values in the GroupFooter caused invalid values to
          be printed, if an PageBreak occured between initializing and printing
          the band.

        * Added Accessor methods for common style properties as suggested
          by 'joecole'. Band and Elements have now various getter/setter
          methods to make the style definition easier.

        * InternalFrameDemo shows how to use the PreviewInternalFrame properly.

0.8.4:
        * Table targets use some kind of repagination to prepare the layouting.
          This makes it possible to compute the columns and styles before they
          are written into the stream, so that we can create streaming content.

        * The BaseFont-Support is now able to cache the collected fonts. This
          reduces the startup time.

        * We have modules to configure the functionality of JFreeReport ...

        * HTML output can strip the file headers to make it easier to include
          the generated content into other files.

        * All code moved to org.pentaho.reporting.engine.classic.core; all deprecated methods and classes
          were removed. Major structural changes ... (write docs about that issue!)

        * Simple ReportParser creates cleaner objects (undefined attributes are
          no longer filled with unnecessary default values).

        * The SheetName function property is more usable now.

        * The GUI base module contains the option to translate the standard GUI
          dialogs of Swing.

        * The elementfactory package replaces the old ItemFactory. These factory
          classes contain a bean like interface as well as the static methods of
          the old ItemFactory.

        * We now have templates for Rectangles and Horizontal- and Vertical line
          shapes. This reduces the definition code size when creating the common
          shape use-cases.

        * ReportWriter creates slightly cleaner code by removing unnecessary
          class specifications.

	      * SimpleReportParser is now able to create sub bands.

        * The writer supports comments and templates now. Comments are only
          preserved in extended report formats for now.

        * The excel export defines the printer setup according to the report
          configuration or the defined page format of the report.

        * The reserved-literal (the string that is appended if the text would
          not fit into the element) can now be customized using stylessheets.

        * Initializing JFreeReport is now done in a controled way using the
          Boot class.

        * Minor performance improvements to reduce the number of generated
          objects during the report generation.

        * A graphical configuration editor assists in the process of creating
          JFreeReport configuration files.

        * The XML Parser reports validation errors when a DTD is available.

        * The ReportConverter got a facelifting and can now also be used to
          import the extended reports from older versions. Changed class
          attributes will be translated to the new namespace.

        * The PDF target can now control what PDF document version will be
          generated.

0.8.3g:
        * BugFix: XML encoding for entity 'apos' was invalid.

        * BugFix: The call to the AWT print dialog is now completly
          removed from the event-handler thread to work around a
          Java-Bug.

        * BugFix: Exceptions were not logged and caused no valid error
          message when exporting a report with the GUI dialogs.

        * BugFix: ExcelFiles were not visible from the ExcelExportDialog.

        * BugFix: Image- and Shape content was not aligned in the pageable
          output targets.

        * BugFix: Another fix for the image references of the HTML target.
          Images contained in a separate data directory were not visible.

        * BugFix: The multithreading caused problems due to an missing
          sychronize block in the worker class. This caused the worker to
          dead-lock in some cases.

        * BugFix: The preview components did not kill the worker threads
          when being finalized. The repagination worker was not interrupted
          if the pagination was aborted.

        * The Report templates for the reference documentation were not
          included in the JFreeReport jar file.

        * The LayoutManagers now synchronizes on the Element-Tree instead of
          the "this" reference.

        * The PDF layouting bug, which appeared in some VMs has been resolved.
          The bug was caused by an non-strict floating point implementation
          as allowed since Java 1.2; this feature seems to have influence
          on all layouting operations and the PDF generation. The readme file
          contains more details.

0.8.3f: (24-Aug-2003)
        * BugFix: SwingIcons demo definition was invalid.

        * BugFix: The PDF export dialog did not read the predefined
          security settings from the report configuration.

        * BugFix: Table targets did not use the properties to get
          configured.

        * BugFix: The Html Output produced garbage when writing image
          references.

        * BugFix: Expressions were not able to see the next datarow
          and therefore useless as group arguments

        * BugFix: The tabletargets do no longer have a default sheet
          name defined. The html target will no print an automatic
          page header anymore.

        * BugFix: The preview dialog now disables all actions when
          a long running operation is done. The tool bar floating and
          the large icons setting can now be configured from within
          the report properties.

        * The export and pagination progress is now visible in the
          ReportProgressDialog.

0.8.3e: (16-Jul-2003)
        * BugFix: JFreeReportResources didn't work in a Headless environment.
          This caused weird behaviour in Tomcat. Thanks to jxmoshe for your
          valueable hints.

        * BugFix: The Pageable targets created empty pages on
          PageableProcessor.processReport();

        * BugFix: The string encoding 1251 (Windows Cyrillic) was not defined in
          the EncodingComboBox and therefore not visible.

0.8.3d: (29-Jun-2003)
        * BugFix: All table report processors had problems with reports, that
          had a PageFormat with a imagable size > 1000 points. This issue was
          pure stupidity and is fixed now...

        * BugFix: The ItemPercentageFunction did not initialize its private sum
          function properly causing IndexOutOfBounds exceptions.

        * BugFix: The PlainTextOutputTarget did not handle the encodings of the
          generated text, it did encode all texts with "Cp437".

        * BugFix: The PlainTextDialog and the EncodingComboBoxModel had errors
          which prevent them from selecting encodings correctly.

        * BugFix: The StyleSheetCollection now handles stylesheets with the
          same name correctly.

        * All OutputTargets use String properties now for their configuration.
          The object interface was no great idea and caused confusion so it
          was narrowed down to a String-only interface.

          The Strings "true" and "false" are used to express boolean values.

        * The iText library was updated to version 1.00; this version is now
          able to handle the PNG-Alpha channel.

0.8.3c: (19-Jun-2003)
        * BugFix: The Area class is not able to clip lines, any attemp results
          in an empty area. Clipping for lines is now disabled, if the output
          target does not support clipping, the results may look weird if the
          shape exceeds the element bounds.

        * BugFix: The RTF writer does no longer support images. Using images
          seems to cause a memory leak, so this function is disabled until a
          fix is found.

        * BugFix: The ExportDialogs now disables all plugins during the repagination.
          PageSetup works again.

        * BugFix: The demos now report all errors in a proper way.

        * BugFix: The AbstractBandLayoutManager is now able to handle null content
          without crashes.

        * BugFix: The StyleSheet collection now clones all substylesheets correctly
          and gets updated when stylesheets are added or removed from already
          registered stylesheets.

        * The RTF target now supports all fonts by using the PDF base font support
          classes.

        * The StyleSheet collection is available from all Bands and Elements, as
          soon as the element is connected with the report. Independent elements
          have no stylesheet collection.

        * A new PreviewApplet was created to enable the direct preview of
          Reports within a webpage. The OpenSourceDemoApplet demonstrates the
          new component.

0.8.3b:  (16-Jun-2003)
        * BugFix: StyleSheets were not deeply cloned, so inherited stylesheets
          were shared among all reports. This is fixed now.

          Stylesheets can now be accessed directly using StyleSheetCollection,
          which is maintained by the report definition object.

        * BugFix: Printing in the PreviewFrame was no plugin and could not be
          disabled.

        * BugFix: On MacOS X the font path was not detected properly. MacOS
          does not use the standard unix font path.

        * BugFix: Menu accelerators were not defined in a platform independent way.
          Systems without an CTRL key (like MacOS) were not able to use the
          shortcuts).

        * BugFix: Empty pages were not detected correctly, causing empty pages
          to be printed at the end of the report under some circumstances.

          The group footers pagebreak-after-print now works as expected.

        * BugFix: Not all errors which may have occured during the function
          processing were detected or even printed in the log.

        * BugFix: The PlainTextOutputTarget computed wrong page sizes, which
          caused errors when elements were printed at the bottom or the right
          border of a page.

        * BugFix: The TextContent removed leading whitespaces from the text.

        * BugFix: The HTML-TableProcessor did not encode the generated content
          properly. The content was completly invalid and did not conform to any
          standard. The same bug was hidden in the ReportWriter.

          Both classes are working now as expected.

          Warning: UTF-16 encoded content is not readable by Mozilla or IE, both
          browsers are not able to handle standard conforming UTF-16 correctly.

        * BugFix: The report writer is now able to handle inherited stylesheets
          correctly.

        * BugFix: Null values in the element content do no longer cause the layouting
          to fail. NullContent and empty content are handled correctly now.

        * An EmptyReportException is now thrown when the report generation produced
          no pages for the report.

        * The StyleSheet interface is removed now, it was not used.

        * The reference document generator now also generates documentation for the
          DataSource factories.

        * The XML parser now prints the location of the parse error on all exceptions.l

0.8.3a : (04-Jun-2003)
        * BugFix: Serialization works again. All functions are serializable
          now.

        * BugFix: The report writer handles subclasses correctly

        * BugFix: The parser's extended report definition is working again.

        * BugFix: Unclean definitions in the ReportState, Band, Element and
          DataRow classes.

        * BugFix: The excel and PDF target work again.

        * BugFix: Unclean definition in Group and GroupList methods removed.
          Groups can no longer be composed in an invalid way.

        * BugFix: ReportWriter was unclean and did not handle complex stylesheet
          definitions.

        * BugFix: The parser/writer object factories did not handle inherited objects
          correctly in some cases.

        * BugFix: Generating URLs in the ReportParser was unclean.

        * BugFix: ItemColumnQuotientFunction did not implement the function interface
          causing classcast exceptions when used as function.

        * We got a new Swedish translation. All fame goes to Thomas Dilts.

0.8.3    : (26-May-2003)
        * BugFix: The report states where unclean when a pagebreak was issued,
          causing the printing and several computation functions to fail or to
          return invalid values.

          The event oder was redefined to resolve that issue. Please read
          "migration.txt" for details on the new event order.

        * BugFix: URL handling was buggy, the base URL was never set in the
          templates.

        * BugFix: NewLine characters were not handled correctly in the last
          version. After the linebreak was done, an undisplayable newline character
          remained in the text-line instances.

        * BugFix: The repeating group header feature now repeats all marked group
          headers, and not just the last one.

        * BugFix: Wordbreaking was buggy.

        * Most of the parser code moved into JCommon. We are using JCommon version
          0.8.1; all classes of JCommon moved into the package tree under
          org.jfree.*

        * Upgraded to pixie-0.8.0. All pixie classes moved into the package tree
          under org.jfree.*

        * DTD bugs fixed.

        * Modified the BuggyFontRenderer messages as these messages seemed to
          cause confusion.

        * All table output targets (CSV, HTML, Excel, RTF) have now a generic
          configuration interface; the targets can be configured using the
          ReportConfiguration.

        * Drawable elements are officially supported now. There are no
          drawable implementations yet (except JFreeChart :)), more support
          is included in later versions ...

        * ItemColumnQuotientFunction changed into ItemColumnQuotientExpression.

        * New Translations: Slovenian, Russian, Hungarian and Dutch. Adjusted
          the mnemonics of some translations to fit the displayed text.

        * The Excel export now uses the extended data cell style capabilities
          of POI 1.10. Numeric and Date/Time cells are no longer formatted as
          texts, the cells contain numeric values so that you can use them in
          formulas. In case this causes trouble, the cell format strings can
          be redefined or this feature can be completly disabled. Please see
          migration.txt for details.

        * The licence now has an exception for using function and expression
          implementations in non-free programms.

        * Due to several iText improvements, the PDF target is now able to use
          transparent PNG pictures and iText is now able to use all GIF files.

        * The extended XML-Parser and the writer are now able to write and
          parse generic shapes.

        * The report converter GUI now displays exceptions to the user.

0.8.2 : (12-Apr-2003):
        * Important: There were fixes in the shape handling and the order of the
          function events, please read the file migration.txt for detailed
          information about API changes of this release.

        * BugFix: Layouting was broken for band in band stacking and complex layouts.

        * BugFix: SimplePageLayouter layouting was broken.

        * BugFix: The event handling and pagebreaking within the SimplePageLayouter
          was unclean and under some circumstances the row of a last page which
          triggered a pagebreak could got lost.

          The event handling is now in a better defined state: It is guaranteed, that
          page-start events are invoked before any other report event for the page.
          When starting a new report, the page-start event will be the first event that
          is received. When the itemAdvanced event is triggered all previous bands are
          printed completly and no other event is issued between the itemAdvanced and
          the print event (unless the printing would trigger a new pagebreak).

        * BugFix: Images were not printed correctly, when an image was not loaded
          completly using an ImageObserver. The return value of Graphics2D.drawImage
          is now used to determine whether the image must be loaded and reprinted.
          If the image was not yet loaded, the printing process waits until the image
          is completly loaded by the AWT.

        * BugFix: When no content was generated for given bounds, the resulting null
          content was not checked and caused NullPointerExceptions.

        * BugFix: The PlainTextDialog had no CloseListener, so an attemp to close the
          window had no effect.

        * BugFix: TextLayout was buggy, if the minimum size was greater than the
          element's maximum size.

        * BugFix: The template writer was buggy.

        * BugFix: Extended report definition parser had a bug in the handling of
          the extends-tag of stylesheets.

        * BugFix: Several MemoryLeaks have been fixed. The leaks were non-fatal for
          smaller reports but killed report with more than 300 pages. The reference
          to the JFreeReport object within the ReportStates was replaced by a smallscale
          ReportDefinition object.

          The report definition object is readonly and limits access to the bands and
          group definitions and the report configuration. The function/expression
          collections and the tablemodel are no longer directly available within the
          report definition and can only be accessed indirectly by using the DataRow.

        * BugFix: The excel export generated too many CellStyle-definitions. The generated
          excel file could not be read if more than 4000 CellStyles were generated. The
          fixed implementation fixes the caching of previously generated styles.
          The 4000 CellStyles limitation is a hard limit imposed by MS Excel.

        * "shape-element" added for the simple report definition format. The shape
          element can be used to draw shapes retrieved from the dataRow.

        * ShapeFieldTemplate added to create a easy to use "shape-element" for the
          extended report definition profile.

        * The report processing performance is heavily increased.

        * LineShapes were now created correctly when using the ItemFactory.

        * We have an complete french translation of the core libraries now. Thanks
          mimil :)

        * Bands now bind their own BandLayoutManagers.

        * New demo: The card demo has been added to show a complexer use and the power
          of the extended report definition format. The demo uses templates and
          stylesheets to coordinate the appearance of several fields.

          The demo can be found in the package com.jrefinery.report.demo.cards

        * New demo: The PercentageDemo shows the use of NumberFields and the format
          decimal format string of the number field.

        * A new ElementColorFunction defines the color of an element depending on
          a boolean expression.

        * JFreeReport now uses iText 0.98. This iText version is incompatible with
          the previously used iText version 0.96.

        * The available encodings for the various export dialogs can now be defined
          using a properties file. The properties file is referenced in the report
          configuration in the Key "com.jrefinery.report.encodings.available" and
          the key "com.jrefinery.report.encodings.file". The available key
          can be set to "all", "none" or "file".

          A sample encodings property file can be found in the file
          "/com/jrefinery/report/jfreereport-encodings.properties". Disabling
          unnessary encodings will speed up the initial loading of the preview dialogs.

0.8.1_02 : (09-Mar-2003):
        * BugFix: Shape handling was invalid. All Shapes were painted at position
          (0,0) within the element, regardless what was defined for the shape.

        * BugFix: The ReportWriters validity checks were buggy and caused exceptions
          when writting Object-Descriptions.

0.8.1_01 : (04-Mar-2003):
        * BugFix: The PlainTextOutputDialog was not modal and caused trouble.

        * BugFix: Adding element to a band, which already contains that element
          caused IndexOutofBoundsExceptions.

        * BugFix: The extended parser had a bug in the band handler, so that
          elements got added twice.

        * Added stricter error handling to the report processing. This can be
          activated by setting the com.jrefinery.report.StrictErrorHandling
          property to true. If activated, all exceptions that occur during the
          report processing cause the report generation to fail.

        * Removed the "/jfreereport.properties not found" debug message. It caused
          confusion without supplying anything valuable.

        * Updated the HTML OutputTarget so that the default Page text is printed
          properly and Author and Title work as expected. The Html dialog is now
          more resistent against invalid or unexpected inputs.

        * Updated the README file, so that the layout restrictions are mentioned.
          Thanks for the idea, JM Delsaux.

0.8.1 : (28-Feb-2003):
        * BugFix: Corrected many bugs in the SimplePageLayouter.

        * BugFix: empty ReportProperties were not marked correctly.

        * BugFix: TextLine layout was inaccurate, used java.awt.Dimension instead
          of Dimension2D.

        * BugFix: Band containing other bands were not laid out correctly.

        * BugFix: PreviewPane was unusable when used directly. The report was not
          repaginated automaticly and there was no way to trigger the repagination.

        * BugFix: Generated PNG files in the PDFOutputTarget no longer use the
          Alpha-Channel as iText doesn't seem to like it.

        * BugFix: The generated PDF files did not work with GhostScript.

        * BugFix: The ReportFooter handling was unclean and caused trouble.

        * BugFix: The PageBreak was not handled correctly, so that sometimes bands
          got lost after a pagebreak was done.

        * BugFix: Corrected layouting calculations; using double values seem to cause
          incorrect calculations. Switched to float values everywhere.

        * BugFix: BandLayoutManager illegaly modified the values from the
          ElementStyleSheet. This caused invalid states when a band was hidden and restored.

        * BugFix: The PDFOutputTarget did not handle state restoration correctly when a
          new page was started.

        * Refactoring: All tablemodel related classes moved into a spearate package.
          The package is expected to grow heavily during the next releases.

        * Refactoring: The iText font support moved into a separate package. The
          PDFFontFactory is now known as BaseFontFactory.

        * Refactoring: The BandLayout stuff moved into a separate package as these
          classes are used by allmost all output targets.

        * Info: The First demo has been renamed to SwingIconsDemo.

        * Added a main method in the JFreeReport info, so that everybody is able to
          read the library specifications without having to install or start the
          demo package.

        * The order of fields in the group definition does no longer matter. Anyway,
          all fields of the parent group must also be defined in the child group.

        * Added a new event type: The LayoutEvent can be used to adjust INTERNAL values
          after the layouting is completed. Do not use this event to modify the layout,
          this can have funny results, but won't produce what you may expect.

        * Added separate thread for the repagination process and the printing. The
          PageableOutputTarget now check the Thread-state for interrupt events. If
          the current thread gets interrupted, the report processing or repagination
          is canceled.

        * Added resource compare tool lists differences between the base
          resource class and the localized resources to help with the translation
          process.

        * Added a line height property for text elements. This property can be used
          to increase the space between 2 lines.

        * Bands now handle the object composition correctly and check for component
          loops.

        * The ANT script can be used to checkout the latest sources from the anonymous
          CVS repository on sourceforge.

        * Added a generic DummyImplementation for the output targets. This should help
          to reduce the repagination time.

        * We now have a polish translation. Thanks Pjotr (pbzdyl).

        * Font encoding and embedding can now defined separatly for all text elements.

        * The ABSOLUTE_DIM stylekey was removed. This is now handled by specifying
          a minimum size (and a maximum size if needed).

        * Added dynamic element support for all content types. Image and shape elements
          can be defined as dynamic elements to have their sizes adjusted according to
          the contained content.

        * New element template types: ResourceLabel and ResourceField use a string from
          the data source to lookup a value in an assigned ResourceBundle.

        * Added support for Scaling for Shape and Image elements. Scaling can be
          configured to keep the original aspect ratio.

        * The XML parser now uses local copies of the DTD to validate the document,
          if an document type is specified in the XML definitions.

        * Added support for Underlined and StrikeThrough font style.

        * Several new report functions added by Heiko Evermann.

        * A PaintComponentFunction can be used to create Images from AWT-Components.

        * Added PaintComponentFunction to create images from AWT or Swing components.
          The generated images can be used in ImageElements.

        * Added a new Demo: OpenSourceDemo2.java

        * The maximum band height is now limited by the page height. A band will never
          grow over the available page size when using dynamic elements. To make a band
          greater than the available page height, the user has to force it by defining
          such an invalid minimum band size. This fix reduces the accidentaly generated
          "Report-Does-Not-Proceed" Exceptions.

        * Added a new Demo: LGPLDemo.java shows the automatic height limitation for oversized
          "dynamic" elements.

        * Heiko Evermann wrote an Excel-OutputTarget, which provided the base implementation
          for several table style output targets:

          Added several new OutputTargets:

          - Simple XML Output
              an educational output target to have a simple output target
          - CSV Data-Output
              to write the raw data from the DataRow into a CSV file
          - CSV TableLayout Output
              writes layouted bands and elements into a CSV file.
          - Excel Output
              writes Excel files using the Apache POI library.
          - HTML Output
              writes HTML4 and XHTML content.
          - RTF Output
              generates simple RTF documents
              (implementation limited to standard fonts)
          - PlainTextOutput
              generates text files

        * Added a new XML-parser to support extended report definitions.
          Also implemented a writer to create XML-Definitions from JFreeReport objects.
          The new parser can be used transparent replacement of the old implementation,
          without any special treatment of the client application. The report definition
          type is detected during the parsing process.

        * Added a report converter to convert reports from the simple profile into
          the extensible report definition format.
          (com.jrefinery.report.io.ext.writer.ReportConverterGUI)

        * Added a ReferenceDoc generator for the extensible report definition format:
          (com.jrefinery.report.io.ext.ReferenceDocGenerator)

        * Added support for templates to simplify the usage of DataSources and DataFilters.

        * Redesigned the PreviewDialogs: All dialog implementations now share a common
          backend. All Export-Targets are included using a PlugIn-Strucure and can
          be activated and deactivated separatly using the ReportConfiguration.

        * BugFix: Cloning was insufficient to separate functions and expression from their
          anchestors. Added the method getInstance() to enforce a strict separation of
          the original expression instance and the generated copy.

        * Added a second properties file ("/jfreereport.properties") which overlays the
          main property file "com/jrefinery/report/jfreereport.properties". Use this file
          to create a global configuration without having to repack the jfreereport.jar file.

        * The FileEncodings are now selectable from the PDF- and HTML dialogs.

        * Patrice Rolland contributed a french translation

0.8.0-3 : (07-Jan-2003):
        * BugFix: Fixed the ReportStateList. Element were added at the wrong position, causing
          NullPointerExceptions. Also fixed the dynamic element, if the element contained too much
          data which would not fit on a single page, the report generation failed. Now the data
          is cut down to the size of a single page. The LGPL-Demo shows the new behaviour.

0.8.0-2 : (19-Dec-2002):
        * BugFix: fix for a ReportFooter bug in the layoutmanagement. Printing the ReportFooter on
          its own page caused the report generation to fail.

0.8.0-1 : (16-Dec-2002):
        * BugFix: fix for a PageHeader bug in the layoutmanagement. The bug
          caused the pageheader to drive crazy and print strange values in the elements.

0.8.0 : (13-Dec-2002):
        * Many, many ... (repeat it several times: many) ... many lines of JavaDoc documentation.

        * Added a new Demo: StraightToPDF.java: Demo for saving PDF directly - no preview

        * Added a new Demo: HelloWorld.java: New (simple) demo.

        * Added a new Demo: OpenSourceProjects.java

        * BugFix: FontRendering is not correct when not using AntiAliasing on some JDKs.
          A configuration setting exists to switch to an alterate font size calculation

        * BugFix: PDFFontFactory did not prevent iText from caching the created fonts -> OutOfMemoryException

        * BugFix: PDFDocument metadata was never added to the document (Author and Title)

        * BugFix: original LineBreaking was buggy and got fixed by Aleksandr Gekht

        * BugFix: DefaultTableModel creation was buggy, ReportGenerator had a NullPointer
          on parseReport(File). Thanks to Robert Fuller for the report and the fix.

        * FunctionLeveling: functions can be executed in a controled order. Functions of the same
          depencylevel are considered independent, functions with a higher level depended.

        * Dynamic TextElements are now fully supported.

        * A full featured configuration interface with support for external property file
          and system-properties added. Reports can supply local configuration settings
          (as PDFEncoding or advanced PDF-Settings (security, author, title)

        * ReportProperties can be defined in the report definition. <property-ref> tag
          is used to mark and possibly define the property. Marked properties are treated
          as DataRow-columns and can be queried as every other function or tablemodel column.

        * PageCounting can now be customized. Start-page can be set, page counting is now
          a Function.

        * Preview frame can have a maximum-size and a preferred-size defined. The maximum
          size is enforced.

        * Logging now uses Object-parameters instead of strings for performance reasons.

        * A PreviewDialog was added, as frames are not accessible from within modal
          dialogs.

        * PreviewDialog/Frame menus changed to allow the selection of Zoom-levels by
          using the JMenu.

        * Some possible memory leaks have been resolved. Most leaks occur in certain
          Swing/AWT environments when PreviewFrames and ReportPanes are not garbage collected.
          If you think you found another leak, report it to us (and don't forget to
          tell us the JDK version you use).

        * We have a polish translation. And there is a spanish translation as well.

        * Elements can have a vertical alignment.

        * LineShapeElement changed. A line is no longer extended to the full width
          if the X values are equal and the Y values are equal. A line must be  a
          valid shape and can then be extended to the full element dimension by
          setting the scale-property to true.

        * All Bands are able to pagebreak before or after printing. Pagebreaks on
          empty pages are ignored. A page is empty if no content or just the pageheader
          is printed.

        * All text is now printed to the font's base line. The base line is calculated
          manually and does not depend on the AWT anymore. Now the results are almost
          as accurate as the iText calculations.

        * The report now uses a new layouting/printing subsystem. Printing is done by
          using a report function and is no longer bound to a specific output method.

        * The dynamic feature finally works in all imaginable configurations.

        * Elements are now configured using StyleSheets. There is no direct StyleSheet
          support in the parser yet. StyleSheet can inherit settings from other
          style sheets. Not all stylesheet settings are configurable using the classical
          get/set methods and not all style-settings need to be used by the outputtargets.
          StyleSheet-settings should be seen as a general constraints collection, and
          like AWT does, not every constraint is used everywhere.

        * The PDF-Dialog is now able to save the PDF without showing the dialog to the
          user.

        * Bands are able to use LayoutManager for their internal component layout.
          Bands can be stacked into each other, the same rules as in the AWT apply.

        * The report state list uses a smarter storage model. The first states are
          now always stored as strong-references.

        * JCommon-0.7.1 is used.

        * removed deprecated classes and most of the deprecated functions. <*-function>
          tags are no longer defined in the DTD, use the corresponding <*-field> elements.
          DataElement and DataFunctionElement and their sub classes do no longer exist.
          Use text fields and filters instead or create similiar fields using the ItemFactory.

        * PageCountFunction and PageTotalFunction is now more flexible and can count
          the pages of a certain group or can start counting at an arbitary page number.

        * Functions and Expressions have dependency levels.  Higher dependency functions
          are executed before lower dependency functions.

        * There is a JPEG-Servlet in the extension package. This servlet generates
          JPEG-Files for every page of an report.

0.7.6 : (07-Sep-2002):

        --- A new Library is needed: bsh.jar from www.beanshell.org ---

        * Downport to JDK 1.2.2, requires a Pixie-Update from the CVS; JFreeReport should
          now work in Visual Age for Java 3.5 without any patching.

        * PDF supports security and encryption (40bit & 128bit keys). The password for the example
          is "user" and "owner" for the user- and the ownerpassword.

        * An extended and more comportable Save-Dialog for PDF-Files exists

        * Expressions exist as a way to implement stateless lightweight
          functions. Expressions do not maintain a state and refer only
          the current datarow.

        * The BSHExpression can be used to include the expressions sourcecode
          in the report definition. This enables a

        * DataRows are used to unify the access to the different datasources
          as functions, expressions and the tablemodel.

        * Bands can be set invisible, invisible bands are not printed and
          consume no space.

        * Band height of "-100" is now interpreted as "full page height available".
          In the XML-definitions this can be expressed by setting the pageheight to "100%"

        * Rectangle-Elements support drawing, so that an unfilled border can
          be drawn

        * After Parsing the report the source filename and the contentbase
          are stored as report properties.

        * The DefaultPageFormat can be defined in the report definitions <report>-tag

        * All Strings are cut down to the length of the element. If a string is too
          long to fit into the field, the string is cut down on word boundry.

        * Bug: PreviewFrame was not being GarbageCollected, if dispose() or removeNotify() was
          not called. Added call to dispose when the frame is hidden.

        * Bug: Drawing on G2OutputTarget was buggy, aligment was inaccurate

        * Bug: FontSize for G2OutputTarget was not calculated correctly

        * Bug: ReportPane.setError was buggy

        * Bug: ReportState.isProceeding was useless

        * Bug: Fonthandling for default fonts fixed in PDF-Target

        * Bug: Unicode support was not working in PDF-mode

        * Bug: some GIF Images not recognized

        * Bug: ClassLoader changed for use in servlet environment

        * Bug: Mutiline-Text fixed

        * Bug: Cloning fixed

        * Bug: An Empty (0 rows) tablemodel caused a single all-elements-null row to be printed. Fixed,
          now the headers and then the footers are printed without an ItemBand between headers and footers
          in that case.

        * Bug: WMF-Support in Pixie-Lib: The WmfImageProducer needed a huge amount of RAM to work on
          complex images, now the image production process uses multiple scanlines to create the image
          resulting in lower resource usage.

0.7.5 : (21-Jul-2002):
        * DTD updated to contain the latest elements

        * Bug: ReportFunctions are now evaluated before the result is printed

        * Bug: WaitingImageObserver deadlock fixed

        * Bug: Nullpointers on empty graphic fixed

        * Bug: Corrected function behaviour when the tablemodel contains no data

        * Bug: Reportproperties set in the JFreeReport object got lost when a report is started

        * A new example (first.xml) which is used in the documentation

        * Most classes now implement the serializable and clonable interfaces

        * TextElement simplified

        * ImageElement/ImageFunctionElement updated

        * Removed JUNIT tests from base package. The tests can be found in
          the extension project.

        * A new mode exists on report processing, called a prepare run. During this run,
          the report is repaginated and the reentry points for the ReportStateList are
          created. Function-results computed in this state can be reused during the real
          report processing. This leads to 2 new functions to demonstrate the posibilities:

        * 2 new functions ItemPercent and TotalSum
          TotalSum summarizes a group in the prepare run so that the total sum
          for that group is available in the group header.

0.7.4 : (10-Jun-2002):
        * A bug in PDFFontFactory crashed the programm in linux

        * jcommon-0.6.2.jar is now included in the package. JCommon
          changed the name of an used class, so you have to use jcommon-0.6.2
          instead of one of the previous versions.

0.7.3 : (09-Jun-2002):
        * PreviewPane has a property to enable/disable the painting of the
          border

        * PreviewFrame's toolbar floating is controled by a property

        * PDFTarget uses the truetype fonts of the system. These fonts have
          to be registered to the FontFactory in order to be used.
          Registration can be done by feeding Directories or files into the
          PDFOutoutTarget.FontFactory or by letting the factory search the
          fonts by ifself by setting the SystemProperty
          "com.jrefinery.report.targets.PDFOutputTarget.AUTOINIT" to "true"

        * PDFTarget is able to do unicode. The encoding is controled by the
          system property
          "com.jrefinery.report.targets.PDFOutputTarget.ENCODING"
          and defaults to windows "Cp1252" (WinANSI). Set this property to
          "Identity-H" to enable HorizontalUnicode writing (see
          PDFOutputTarget.setEncoding() and the iText documentation for more
          information on that)

        * PreviewFrame has improved navigation (Goto first, last, or Page#)

        * A statusbar for the PreviewPane displays total and current pages

        * A demo with 200.000 rows is added to show what JFR is able to do

        * Truetype-Fonts are now embedded in PDF

        * Support for generic shapes is included

        * a new Element (RectangleShapeElement) for filled colored boxes

        * all TextElement-Inheritants have been replaced by the filtering
          interface in com.jrefinery.report.filter. The deprecated classes in
          the main package should no longer be used. Use the ItemFactory to
          create the TextElement with correct filters attached.

        * A new function (ElementVisibilitySwitch) shows how to control the
          visiblity of elements at runtime.

        * The parser has a better structure and can be easier customized
          using inheritance.

        * All TextElements are now able to perform a linebreak if the text
          is too long to fit on the line and if there is space for more than
          one line.

        * Reports are repaginated before printing, Repagination moved into
          JFreeReport. A new ReportState property (isPrepareRun()) can be
          used to query whether this is a repagination run.

        * The total number of pages is stored in the report properties
          (using key "report.pagecount")

        * An exception dialog informs the user when errors occur. A stacktrace
          can be viewed in this dialog if wanted.

        * ReportProperties are now bound to the ReportStates, not the report,
          and shared among all ReportStates derived from the StartState.
          A repagination run for printing/saving will no longer affect other
          prepared reports.

        * UI improvements

        * removed ReportStateConstants interface and the constants for the
          action commands in JFreeReportConstants.

        * All classes have at least basic documentation.

        * All UserInterface strings are localized. Localisations for
          english and german exist.


        Bugs fixed:
        * ReportState did not initialize the ReportProperties correctly

        * ReportState caused a OutOfMemoryError on huge reports

        * the default PageFormat is passed from the JFreeReport-object into the
          PreviewFrame.

        Still to do:

        * JUnitTests

0.7.2a: (15-May-2002) Just a small fix as long as the code is fresh.
        * No more NullPointer if the DataModel contains null
        * values. Functions can no longer disrupt the report processing by
          throwing Exceptions.
        * All text elements have a property "nullstring" to define a String
          which will replace all Null-Values for this element's or function's
          value. Thanks go to Thomas Rynne for this inspiration.
        * Fixed Bug: The ImageReference did not fill its sourceURL, so printing
          images to pdf targets always failed.

0.7.2 : (14_May-2002) This release is the result of a code review. Most
        classes have been simplified and hardened. Unnessecary import
        statements have been removed, so every class has changed. Please
        look at the classes ChangeLog to see real changes.

        * Important: Please make sure you have the Pixie-Library included,
          or ImageReference/ImageElement will not work. The Pixie-Library
          is included in JFreeReport's repositiory and release directory.

        * All complex constructors have been removed. For every element
          exists a defaultConstructor. All properties can be accessed by
          accessor functions.

        * From now on a report is always completly initialized. Such a
          report has no null-value bands or groups. A report is guaranteed
          to have at least one group.

        * Groups have to be fully qualified. A sub-group has to include all
          fields from its parent. So if you define group "Continents" and
          a subgroup of "Countries" you have to declare

          <groups>
            <group name="Continents">
              <fields>
                <field>Continient</field>
              </fields>
            </group>
            <group name="Countries">
              <fields>
                <field>Continient</field>
                <field>Countries</field>
              </field>
            </group>
          </groups>

         for the report to work correctly. See example2.xml for a complete
         report definition.

       * ReportHeader, ReportFooter and GroupHeaders may trigger a pageBreak
         before they are printed.
         See example3.xml for details.

       * Line-Elements now recognize the colors-attribute.

       * PreviewPane has been moved to its own package. The actions
         now are abstract to ease up integration of the preview pane in
         other programms.

       * ReportState is much smarter now. Transition from a state to another
         is now done by returning a instance of ReportState, which handles
         all state specific actions.

       * The function interface has been improved. All function get references
         to the report definition and the current report state.

       * Bugfixes:

         - LastRowMissingBug reported by Steven Feinstein is fixed
         - Multiple data elements can now be added to a band refering to
           the same table model column
         - no more NullPointer if no ItemBand or no group defined.

0.7.1 : (24-Apr-2002) A DTD exists for the default report parser, support
        for images, multilined text, and some updates to the PreviewFrame.
        JFreeReport includes a modified version of Pixie to support the
        wmf-file format.

0.7.0 : (8-Mar-2002) Reports can now be saved to PDF format using the
        iText PDF generator (http://www.lowagie.com/itext/).
        Integrated code contributed by Thomas Morgner including report
        functions, XML report definitions and various bug fixes.
        JFreeReport no longer user ANTLR-parsed report definitions.

0.6.0 : (8-Feb-2002) A minor update to ensure compatibility with the
        JCommon Class Library.

