---------------
1.  WHAT's NEW
---------------
A list of changes in recent versions:

1.2.0:
       * Improved the error reporting by passing IOExceptions to the caller.

1.1.5: (2009-12-15)
       * All Date-Parsing is now using stricter methods.

1.1.4: (2009-11-13)
       * [BUG] Loading a bundle for getting the metadata of the bundle
         failed.

1.1.3: (2009-10-20)
       * [BUG] PRD-2072: Caching was not working correctly and led to
         stale entries in the cache and OutOfMemory conditions.

1.1.2: (2009-09-25)
       * [BUG] PRD-1936: Loading resources from within a bundle and from
         the region outside the bundle was unreliable.

1.1.1: (2009-08-21)
       * Added better API support for the sticky flag.

       * DocumentMetaData is now cloneable.

       * Added strict key checking for ResourceKeys so that they point to
         valid content during a createKey or deriveKey operation.

1.1.0: (2009-07-29)
       * [BUG] When writing metadata entries, not all text was escaped correctly
         and thus could lead to invalid documents.

       * [BUG] Date-parsing inside the metadata parser was invalid/buggy.

       * Added better bundle writing support.

       * Added cascading key derivation via ResourceManager so that users of a
         bundled resource do not have to know about the bundle.

       * Added support for "sticky" files. These files are marked in the manifest
         and will be automatically copied into the ZIP bundles on writing.

       * Added support to use a ResourceManager to load entries from memory bundles.

       * Added support for relative path navigation within a bundle

       * Added LibLoader support for parsing metadata without parsing the complete
         report.

       * Added support for user-defined metadata.

       * Corrected ODFMetaData names to match the ODF standard

0.1.0: (2008-05-30)

       * Initial release

         LibDocbundle provides a infrastructure to read and write ODF-compatible document
         archives. It provides support for manilupating the manifest and metadata of the
         documents.

         The library ships with support for loading document bundles from either a ZIP
         file or a directory. Alternative storage methods can be added using the provided
         interfaces.

         LibDocBundle provides two flavors of bundles:
         - A read-only streaming document bundle can be used to load documents via LibLoader
           and allows to fully cache the document loading process. Document loading is
           transparent to the user of LibLoader; therefore it makes no difference to load
           a plain data file or a resource from inside a document bundle.

         - A in-memory bundle allows to edit document bundles. The bundle can then be
           written into a ZIP file or directory using one of the utility methods.
