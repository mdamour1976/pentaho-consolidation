<?xml version="1.0"?>

<xsd:schema version="0.9"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns="http://reporting.pentaho.org/namespaces/datasources/xquery/1.0"
            targetNamespace="http://reporting.pentaho.org/namespaces/datasources/xquery/1.0">
  <xsd:annotation>
    <xsd:documentation>
      This schema describes the format of named Static-Datasource definitions in
      JFreeReport. This document is aimed for the JFreeReport 0.8.10 and 1.0 release.
    </xsd:documentation>
  </xsd:annotation>

  <xsd:element name="xquery-datasource" type="inlineTableType">

  </xsd:element>

  <xsd:complexType name="inlineTableType">
    <xsd:sequence>
      <xsd:element name="definition" type="tableDefinitionType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="row" type="tableRowType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="tableDefinitionType">
    <xsd:sequence>
      <xsd:element name="column" type="tableColumnType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="tableColumnType">
    <xsd:annotation>
      <xsd:documentation>
        Defines a single table column. The name must always be given. If the type is undefined,
        the parser will return java.lang.Object and all content is treated as string content.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="type" type="xsd:string" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="tableRowType">
    <xsd:sequence>
      <xsd:element name="data" type="tableDataType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="tableDataType">
    <xsd:annotation>
      <xsd:documentation>
        Defines a single column content of the given row. The optional type overrides the one given
        in the column definition. The content is given as xml text and if there is no content the null
        attribute must be set to true.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="type" type="xsd:string" use="optional"/>
        <xsd:attribute name="null" type="xsd:boolean" use="required"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

</xsd:schema>
