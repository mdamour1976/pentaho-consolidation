<!--===========================================================================
  This is the build file for the Pentaho Mantle project.
  
  This build file will use the common_build.xml file as the default build
  process and should only override the tasks that need to differ from
  the common build file.
  
  See common_build.xml for more details
============================================================================-->
<project name="Pentaho Reporting Platform Plugin" basedir="." default="default" xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- Import the common_build.xml file which contains all the default tasks -->
  <import file="./build-res/subfloor-gwt.xml" />
  <import file="build-res/subfloor-js.xml" />


  <property name="install.lib-dir" value="${install.target-dir}/tomcat/webapps/pentaho/WEB-INF/lib/"/>

  <!--
      AS STATED ABOVE, THE ONLY TASKS THAT SHOULD EXIST IN THIS BUILD FILE ARE
      THE TASKS THAT NEED TO DIFFER FROM THE DEFAULT IMPLEMENTATION OF THE TASKS
      FOUND IN common_build.xml.
    -->

  <target name="resolve" depends="subfloor-gwt.resolve,subfloor-js.resolve-js"/>

  <target name="stage-js-build">
    <!-- Remove the scripts/ directory that subfloor-js staged -->
    <!--<delete dir="${approot.stage.dir}/scripts"/>-->
  </target>

  <!-- override the subfloor assemble target to do special assembly from the war directory -->
  <target name="assemble" depends="gwt-compile,assemble.init,build-js,package-js-output">
    <!--copy todir="${approot.stage.dir}/lib">
      <fileset dir="${lib.dir}" excludes="pentaho-bi-platform-*.jar" />
      <fileset file="${dist.dir}/${ivy.artifact.id}-${project.revision}.jar" />
      <fileset file="${lib.dir}/gwt-user*.jar" />
    </copy-->
    <copy todir="${approot.stage.dir}">
      <fileset dir="${package.resdir}" />
    </copy>
    <copy todir="${approot.stage.dir}/reportviewer/gwt">
	  <fileset dir="${gwt.output.dir}">
		<exclude name=".gwt-tmp/" />
		<exclude name="*-aux/" />
	  </fileset>
      <!-- Remove top-level directory when copying -->
      <mapper type="regexp" from="^([^/]*)/(.*)$$" to="\2"/>
    </copy>
    <!-- Copy the js build output -->
    <copy todir="${approot.stage.dir}/reportviewer" overwrite="true">
      <!-- Remove top-level directory when copying -->
      <flattenmapper/>
      <fileset dir="${js.build.output.dir}">
        <!-- Entire application -->
        <include name="reportviewer-app.js"/>
        <!-- Processed main module -->
        <include name="reportviewer/reportviewer-main-module.js"/>
      </fileset>
    </copy>
    <!-- Copy dojo output into staging area -->
    <copy todir="${approot.stage.dir}/reportviewer/dojo">
      <fileset dir="${js.script.package.dest}/dojo"/>
    </copy>
  </target>

  <target name="install">
    <deltree dir="${install.target-dir}/pentaho-solutions/system/reporting/reportviewer"/>
    <delete failonerror="false" file="${install.target-dir}/pentaho-solutions/system/reporting/plugin.xml"/>
    <delete failonerror="false" file="${install.target-dir}/pentaho-solutions/system/reporting/settings.xml"/>
    <copydir src="bin/gwt/output" dest="${install.target-dir}/pentaho-solutions/system/reporting"/>
    <copydir src="package-res" dest="${install.target-dir}/pentaho-solutions/system/reporting"/>
    <copy failonerror="true" todir="${install.lib-dir}" file="${dist.dir}/${ivy.artifact.id}-${project.revision}.jar"/>
  </target>

</project>
