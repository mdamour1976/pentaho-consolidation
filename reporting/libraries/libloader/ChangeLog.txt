---------------
1.  WHAT's NEW
---------------

A list of changes in recent versions:

1.2.0:
        * [BUG] Removed slf4j-jcl as this is best reserved until "assembly" time.
          (It causes an infinite loop if deployed with slf4j-log4j12.)

        * [BUG] PRD-2761: ResourceLoading of derived keys failed to retrieve the
          cached resource-bundle if the bundle was a RepositoryResourceBundle.

        * Upgraded EHCache to version 2.0.1

1.1.6: (2010-04-26)
        * [BUG] PRD-2611: CSVTokenizer trimmed all text content by default
          and thus led to subtle errors.

        * Updated the copyright to 2010.

1.1.5: (2010-01-24)
        * Reworked the code so that we avoid deprecated-warnings.

1.1.4: (2009-12-15)
        * Added a more complete example configuration to show how to disable
          all caching in LibLoader.

1.1.3: (2009-11-13)
        * [BUG] PRD-2247: Loading a resource-bundle for retrieving metadata
          failed due to a cache-error.

        * [BUG] PRD-2072: Caching was not working correctly for loaded resources
          and thus caused numerous stale entries.

1.1.2: (2009-09-25)
        * [BUG] PRD-1900: Caching was overly eager and did not check whether
          the resource-bundle has changed in the meantime.

        * [BUG] Fixed log messages for DrawableWrapper that referred to an
          non-existing method.

        * [BUG] EHCache must not serialize resource-bundles to the disk, as
          we need to treat them as singleton for the current report.

1.1.1:  (2009-08-21)
        * [BUG] PRD-1883: Relative paths were not taken into account when
          converting strings into resource-keys.

1.1.0:  (2009-07-29)
        * Moved all code from org.jfree.loader to the new package space
          org.pentaho.reporting.libraries.loader

        * [BUG] AbstractResourceData#getResource fails due to an invalid index
          check.

        * [BUG] DrawableWrapper must not swallow exceptions - it should rethrow
          them so that the call can handle them.

        * Replaced all Classloader.loadClass(..) calls with Class.forName calls
          so that we have better control over when a class is initialized.

        * [BUG] JPEGImageFactoryModule did not recognize EXIF-JPEGs.

        * [BUG] EHCache failed when disk-caches were configured as we used
          an invalid method.

        * ResourceKey now can serialize itself into a string and preserve all
          relevant attributes.

        * [API] Added a convinience method that returns the identifier of a
          ResourceKey as string.

        * Added support to embed resource-files as byte-array into resourcekeys.
          This is a Design-Time helper method.

0.4.0: (30-May-2008)
        * Code-Hardening: Added more checks for NullPointers.
        
        * SVG rendering errors no longer corrupt the Graphics2D context.
          
        * DrawableWrapper now holds a cache of all class-names that have 
          been checked so that we can avoid reflection for many non-drawables.

        * Switched from JCommon to LibBase. All version information is now
          contained in the manifest. The Project-Info implementation reads
          the version numbers from the Jar's Manifest or the
          compiler-output-directory.

        * Added a SVG-Loader module using Batik

        * Added a ImageIO loader module for JDK 1.4+

        * Added a properties file loader module

        * Added Cache-Shutdown methods to the resource-manager.

        * Changed to EHCache as default cache implementation, as it can be
          used more efficiently and runs out of the box without forcing the
          user to provide a configuration.

        * [BUG] A NullPointerException was raised if a relative filename
          tried to query the parent filename. To prevent this, the file must
          be made absolute before trying to access the parent directory.

        * Added support for resource-bundles. Resource-Bundles are ZIP files
          or directories containing a loadable resource that may consist of
          multiple entries within the bundle.

        * LibLoader now uses the module system to manage dependencies. If
          either Batik is not on the classpath or LibLoader runs on JDK 1.2/1.3
          the modules depending on the missing functionality will automatically
          be disabled.

0.3.7: (02-Nov-2007)
        * Upgraded to jcommon-1.0.12

0.3.6: (16-Oct-2007)
        * The build-system now uses the modular build again. By default the
          compile operation returns a automatic-monolithic build that
          automatically strips all classes that have unresolved dependencies.

        * Automatic fixes as reported by IntelliJ-IDEA's inspections

        * Updated the copyright header on all java-files

0.3.5:  (24-Sep-2007)
        * All releases are now built with JDK 1.4. However, we are still compatible
          with JDK 1.2.2 and all releases run and compile under that release.
        
        * [BUG] NullPointerException encountered when compiling with JDK 1.4 and ehcache
        
        * [BUG] The code that opened InputStreams did not always close the
          streams reliably. This could lead to strange errors as soon as the
          number of open files exceeds the maximum number of file handles.

0.3.4:  (21-May-2007)
        * A byte[] resource-key now compares its key-data correctly. This way
          keys from byte-array resources can be cached.

0.3.3:  (27-Apr-2007)
        * [BUG] The ResourceManager's search for usable factories also included
          factories which were no longer assignable to the requested target
          type.

0.3.2:  (01-Apr-2007)
        * Added stronger logging and cleaned up the error messages returned
          from the loader framework.

        * Derived resource-keys now preserve the parent's context. The system
          first tries to create the derived key before it falls back to create
          an absolute key from the given path. This mimics the default URL
          behavior now.

0.3.1:  (07-Mar-2007)
        * [BUG] Creating and deriving File and/or URL keys from Strings failed
          under certain conditions.

0.3.0:  (01-Mar-2007)
        * The internal resource-key creation and resource-loader architecture
          has been simplified. Instead of having complex resource-keys for each
          loader, we now have one generic key that consists of a single object
          to locate the resource and a map of factory keys to configure the
          resource creation process.

          This also fixes the various ugly misconfiguration that made working
          with files and file-URLs so confusing.

0.2.2:  (22-Dec-2006)
        * [BUG] Caching raw-keys was invalid and consumed enormous amounts
          of memory.

        * The EHCache-Module has been upgraded to work with EHCache 1.2.4.

0.2.1:  (11-Dec-2006)
        * [BUG] File-URLs failed with LibLoader if the URL's file part was
          URL-Encoded. We now use a special handler for these cases.

0.2.0:  (03-Dec-2006)
        * This is the first real release version of LibLoader. At this
          point this library has some primitive caching and does a good
          job at loading resources.

0.1.5: (26-Sep-2006)
        * Limited the size of resources that are held in memory to 512kb.

0.1.4: (31-Aug-2006)
0.1.3: (30-Jul-2006)
0.1.2: (30-May-2006)
0.1.1: (30-Apr-2006)
        * New factory implementation for loading properties.

        * [BUG] Fixes in the resource and zip-loader implementations for dealing
          with derived keys.

0.1.0: (17-Apr-2006)
        * Initial public version.
